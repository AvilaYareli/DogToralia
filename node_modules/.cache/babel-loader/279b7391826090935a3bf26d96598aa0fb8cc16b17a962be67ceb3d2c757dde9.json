{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"container-fluid\"\n};\nvar _hoisted_2 = {\n  \"class\": \"row starter-main\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Breadcrumbs = _resolveComponent(\"Breadcrumbs\");\n  var _component_starterMain = _resolveComponent(\"starterMain\");\n  var _component_simpleCard = _resolveComponent(\"simpleCard\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_Breadcrumbs, {\n    title: \"Estetica Veterinaria\"\n  }), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_starterMain), _createVNode(_component_simpleCard)])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_Breadcrumbs","title","_createElementVNode","_hoisted_1","_hoisted_2","_component_starterMain","_component_simpleCard"],"sources":["C:\\YARELI\\New\\VUE\\DogToralia\\src\\pages\\indexUser.vue"],"sourcesContent":["<template>\r\n   <Breadcrumbs title=\"Estetica Veterinaria\"/>\r\n    <div class=\"container-fluid\">\r\n            <div class=\"row starter-main\">\r\n                    <starterMain/>\r\n                    <simpleCard/>\r\n            </div>\r\n    </div>\r\n</template>\r\n<script>\r\n\r\n\r\nimport starterMain from \"@/components/starterMain.vue\"\r\nimport simpleCard from \"@/components/simpleCard.vue\"\r\nexport default {\r\n        components:{\r\n                starterMain,\r\n                simpleCard\r\n        }\r\n\r\n//         methods: {\r\n//         validarUser: function() {\r\n//                 debugger;\r\n//          this.$session.set('cas_user', \"OK\")\r\n\r\n//         if( this.$session.get(\"username\")==\"OK\"){\r\n\r\n//         }this.$toast.show('Usuario logeado', { theme: 'outline',position: 'top-right', icon : 'times', type: 'error', duration: 2000 });  \r\n//       },\r\n//       doLogin() {\r\n//          if (this.email === \"prueba@gmail.com\" || this.password === \"test@123456\") {\r\n//            this.$router.replace('dashboard');\r\n//            localStorage.setItem('user',this.email)\r\n//          } else {\r\n//           this.$toast.show('invalid email and password ', { theme: 'outline',position: 'top-right', icon : 'times', type: 'error', duration: 2000 });  \r\n//          }\r\n//       },\r\n//     }\r\n}\r\n</script>"],"mappings":";;EAES,SAAM;AAAiB;;EACf,SAAM;AAAkB;;;;;uBAHzCA,mBAAA,CAAAC,SAAA,SACGC,YAAA,CAA2CC,sBAAA;IAA9BC,KAAK,EAAC;EAAsB,IACxCC,mBAAA,CAKM,OALNC,UAKM,GAJED,mBAAA,CAGM,OAHNE,UAGM,GAFEL,YAAA,CAAcM,sBAAA,GACdN,YAAA,CAAaO,qBAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}