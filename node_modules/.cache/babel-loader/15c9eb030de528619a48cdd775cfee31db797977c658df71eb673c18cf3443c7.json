{"ast":null,"code":"import _regeneratorRuntime from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  data: function data() {\n    return {\n      busiId: this.$route.params.id,\n      schedule: [{\n        day_of_week: 'Friday',\n        time_slots: [{\n          start_time: '',\n          end_time: ''\n        }]\n      }]\n    };\n  },\n  watch: {\n    '$route.params.id': function $routeParamsId(newId) {\n      this.busiId = newId;\n    }\n  },\n  methods: {\n    // Método para añadir una nueva franja horaria a un día específico\n    addSlot: function addSlot(index) {\n      this.schedule[index].time_slots.push({\n        start_time: '',\n        end_time: ''\n      });\n    },\n    // Método para eliminar una franja horaria de un día específico\n    removeSlot: function removeSlot(dayIndex, slotIndex) {\n      this.schedule[dayIndex].time_slots.splice(slotIndex, 1);\n    },\n    // Método para añadir un nuevo día con su franja horaria\n    addDay: function addDay() {\n      this.schedule.push({\n        day_of_week: '',\n        time_slots: [{\n          start_time: '',\n          end_time: ''\n        }]\n      });\n    },\n    submitSchedule: function submitSchedule() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token, response, data;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              token = localStorage.getItem('token'); // const newToken = await this.refreshToken();\n              //  const token = newToken || localStorage.getItem('token');\n              if (token) {\n                _context.next = 5;\n                break;\n              }\n              _this.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\n              _this.$router.push('/auth/login');\n              return _context.abrupt(\"return\");\n            case 5:\n              _context.prev = 5;\n              _context.next = 8;\n              return fetch(\"http://127.0.0.1:8000/api/business/schedule/\".concat(_this.busiId), {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                  schedule: _this.schedule\n                })\n              });\n            case 8:\n              response = _context.sent;\n              if (response.ok) {\n                _context.next = 11;\n                break;\n              }\n              throw new Error('Error al registrar el horario');\n            case 11:\n              _context.next = 13;\n              return response.json();\n            case 13:\n              data = _context.sent;\n              console.log('Horario registrado:', data);\n              alert('Horario registrado con éxito');\n              _context.next = 22;\n              break;\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](5);\n              console.error(_context.t0);\n              alert('Hubo un problema al registrar el horario');\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[5, 18]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["data","busiId","$route","params","id","schedule","day_of_week","time_slots","start_time","end_time","watch","$routeParamsId","newId","methods","addSlot","index","push","removeSlot","dayIndex","slotIndex","splice","addDay","submitSchedule","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","wrap","_callee$","_context","prev","next","localStorage","getItem","errorMessage","$router","abrupt","fetch","concat","method","headers","body","JSON","stringify","sent","ok","Error","json","console","log","alert","t0","error","stop"],"sources":["C:\\YARELI\\New\\VUE\\DogToralia\\src\\pages\\admin\\horarios\\regisHorario.vue"],"sourcesContent":["<template>\r\n    <div class=\"card\">\r\n        <div class=\"card-header pb-0 ml-2 \">\r\n              <!-- <router-link class=\"btn btn-success active left\" to=\"/nuevo-negocio\">Nuevo negocio</router-link> -->\r\n               <button class=\"btn btn-success\" @click=\"addDay\">Añadir Día</button>\r\n          </div>\r\n    <div class=\"container mt-5\">\r\n      <h1 class=\"text-center \">Registrar Horario{{ busiId }}</h1>\r\n      \r\n      <form @submit.prevent=\"submitSchedule\">\r\n        <div v-for=\"(day, index) in schedule\" :key=\"index\" class=\"mb-4\">\r\n          <h4>{{ day.day_of_week }}</h4>\r\n          \r\n          <div v-for=\"(slot, idx) in day.time_slots\" :key=\"idx\" class=\"row mb-2\">\r\n            <div class=\"col\">\r\n              <label for=\"start_time\">Hora de inicio</label>\r\n              <input  type=\"time\" v-model=\"slot.start_time\"  class=\"form-control\" required />\r\n            </div>\r\n            <div class=\"col\">\r\n              <label for=\"end_time\">Hora de fin</label>\r\n              <input  type=\"time\"  v-model=\"slot.end_time\"   class=\"form-control\"   required />\r\n            </div>\r\n            <div class=\"col-2 d-flex align-items-end\">\r\n              <button  class=\"btn btn-danger\"  @click=\"removeSlot(index, idx)\">Eliminar franja</button>\r\n            </div>\r\n          </div>\r\n          <button \r\n          class=\"btn btn-info\" \r\n            @click.prevent=\"addSlot(index)\">Añadir Franja Horaria</button>\r\n        </div>\r\n        <div class=\"card-footer d-flex justify-content-end\">\r\n        <button type=\"submit\" class=\"btn btn-primary mt-4\">Registrar Horario</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n</div>\r\n  </template>\r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        busiId: this.$route.params.id,\r\n        schedule: [\r\n          {\r\n            day_of_week: 'Friday',\r\n            time_slots: [\r\n              { start_time: '', end_time: '' }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n    },\r\n    watch: {\r\n    '$route.params.id': function(newId) {\r\n      this.busiId = newId;\r\n    }\r\n  },\r\n    methods: {\r\n      // Método para añadir una nueva franja horaria a un día específico\r\n      addSlot(index) {\r\n        this.schedule[index].time_slots.push({ start_time: '', end_time: '' });\r\n      },\r\n      \r\n      // Método para eliminar una franja horaria de un día específico\r\n      removeSlot(dayIndex, slotIndex) {\r\n        this.schedule[dayIndex].time_slots.splice(slotIndex, 1);\r\n      },\r\n      \r\n      // Método para añadir un nuevo día con su franja horaria\r\n      addDay() {\r\n        this.schedule.push({\r\n          day_of_week: '',\r\n          time_slots: [\r\n            { start_time: '', end_time: '' }\r\n          ]\r\n        });\r\n      },\r\n      \r\n     \r\n      async submitSchedule() {\r\n        const token = localStorage.getItem('token');\r\n            // const newToken = await this.refreshToken();\r\n            //  const token = newToken || localStorage.getItem('token');\r\n      if (!token) {\r\n        this.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\r\n        this.$router.push('/auth/login');\r\n        return;\r\n      } \r\n        try {\r\n          const response = await fetch(`http://127.0.0.1:8000/api/business/schedule/${this.busiId}`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ schedule: this.schedule })\r\n          });\r\n          \r\n          if (!response.ok) throw new Error('Error al registrar el horario');\r\n          \r\n          const data = await response.json();\r\n          console.log('Horario registrado:', data);\r\n          alert('Horario registrado con éxito');\r\n        } catch (error) {\r\n          console.error(error);\r\n          alert('Hubo un problema al registrar el horario');\r\n        }\r\n      }\r\n    }\r\n  };\r\n  </script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}