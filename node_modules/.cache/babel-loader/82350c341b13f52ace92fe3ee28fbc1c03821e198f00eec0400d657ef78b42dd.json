{"ast":null,"code":"import _regeneratorRuntime from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nexport default {\n  //     props: {\n  //     negocioId: {\n  //       type: Number,\n  //       required: true\n  //     }\n  //   },\n  data: function data() {\n    return {\n      servi: [],\n      error: null,\n      negocioId: null\n    };\n  },\n  created: function created() {\n    this.listarServicios(this.negocioId);\n  },\n  methods: {\n    detalles: function detalles(id) {\n      this.$router.push({\n        name: 'detalleMinegocio',\n        params: {\n          id: id\n        }\n      });\n    },\n    listarServicios: function listarServicios() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token, myHeaders, requestOptions, response, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              token = localStorage.getItem('token');\n              if (token) {\n                _context.next = 5;\n                break;\n              }\n              _this.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\n              _this.$router.push('/auth/login');\n              return _context.abrupt(\"return\");\n            case 5:\n              _context.prev = 5;\n              myHeaders = new Headers();\n              myHeaders.append(\"Content-Type\", \"application/json\");\n              myHeaders.append(\"Authorization\", \"Bearer \".concat(token));\n              requestOptions = {\n                method: \"GET\",\n                headers: myHeaders,\n                redirect: \"follow\"\n              };\n              _context.next = 12;\n              return fetch(\"http://127.0.0.1:8000/api/services/business/\".concat(_this.negocioId), requestOptions);\n            case 12:\n              response = _context.sent;\n              _context.next = 15;\n              return response.json();\n            case 15:\n              result = _context.sent;\n              _this.servi = result.services.data;\n              _context.next = 23;\n              break;\n            case 19:\n              _context.prev = 19;\n              _context.t0 = _context[\"catch\"](5);\n              console.error('Error al obtener los servicios:', _context.t0);\n              _this.error = 'Error al obtener los detalles de los servicios';\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[5, 19]]);\n      }))();\n    } // eliminar(id) {\n    //   Swal.fire({\n    //     title: '¿Está seguro de eliminar este servicios?',\n    //     icon: 'warning',\n    //     showCancelButton: true,\n    //     confirmButtonColor: '#3085d6',\n    //     cancelButtonColor: '#d33',\n    //     confirmButtonText: 'Sí, eliminar',\n    //     cancelButtonText: 'Cancelar',\n    //   }).then((result) => {\n    //     if (result.isConfirmed) {\n    //       const token = localStorage.getItem('token');\n    //       if (!token) {\n    //         this.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\n    //         this.$router.push('/auth/login');\n    //         return;\n    //       }\n    //       const myHeaders = new Headers();\n    //       myHeaders.append(\"Content-Type\", \"application/json\");\n    //       myHeaders.append(\"Authorization\", `Bearer ${token}`);\n    //       const requestOptions = {\n    //         method: \"DELETE\",\n    //         headers: myHeaders,\n    //         redirect: \"follow\",\n    //       };\n    //       fetch(`http://127.0.0.1:8000/api/business/${id}`, requestOptions)\n    //         .then(response => response.json())\n    //         .then(result => {\n    //           if (result.status === 'success') {\n    //             Swal.fire(\n    //               'Eliminado!',\n    //               'El servicios ha sido eliminado correctamente.',\n    //               'success'\n    //             );\n    //             this.listarNegocios();\n    //           } else {\n    //             Swal.fire(\n    //               'Error!',\n    //               result.message || 'Hubo un problema al eliminar el servicios.',\n    //               'error'\n    //             );\n    //           }\n    //         })\n    //         .catch(err => {\n    //           console.error('Error al eliminar el servicios:', err);\n    //           Swal.fire(\n    //             'Error!',\n    //             'Hubo un problema al eliminar el servicios.',\n    //             'error'\n    //           );\n    //         });\n    //     }\n    //   });\n    // },\n  }\n};","map":{"version":3,"names":["axios","Swal","data","servi","error","negocioId","created","listarServicios","methods","detalles","id","$router","push","name","params","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","myHeaders","requestOptions","response","result","wrap","_callee$","_context","prev","next","localStorage","getItem","errorMessage","abrupt","Headers","append","concat","method","headers","redirect","fetch","sent","json","services","t0","console","stop"],"sources":["C:\\YARELI\\New\\VUE\\DogToralia\\src\\pages\\admin\\servicio\\servicios.vue"],"sourcesContent":["<template>\r\n    <p>Mostrando servicios para el negocio con ID: {{ negocioId }}</p>\r\n    <div class=\"col-sm-12 col-xl-6\" v-for=\"servi in servi\" :key=\"servi.id\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h4 :class=\"item.class\">{{ servi.title }}</h4>\r\n      </div>\r\n      <div class=\"card-body\" >\r\n        <p class=\"mb-0\">{{ servi.description }}</p>\r\n      </div>\r\n      <div class=\"card-footer\">\r\n        <h6 class=\"mb-0\">Card Footer</h6>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n//     props: {\r\n//     negocioId: {\r\n//       type: Number,\r\n//       required: true\r\n//     }\r\n//   },\r\n  data() {\r\n    return {\r\n      servi: [],\r\n      error: null,\r\n      negocioId: null\r\n    };\r\n  },\r\n  created() {\r\n    this.listarServicios(this.negocioId);\r\n  },\r\n  methods: {\r\n    detalles(id) {\r\n      this.$router.push({ name: 'detalleMinegocio', params: { id: id } });\r\n    },\r\n   \r\n    async listarServicios() {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        this.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\r\n        this.$router.push('/auth/login');\r\n        return;\r\n      }\r\n      try {\r\n        const myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        myHeaders.append(\"Authorization\", `Bearer ${token}`);\r\n\r\n        const requestOptions = {\r\n          method: \"GET\",\r\n          headers: myHeaders,\r\n          redirect: \"follow\",\r\n        };\r\n        const response = await fetch(`http://127.0.0.1:8000/api/services/business/${this.negocioId}`, requestOptions);\r\n        const result = await response.json();\r\n        this.servi = result.services.data;\r\n      } catch (err) {\r\n        console.error('Error al obtener los servicios:', err);\r\n        this.error = 'Error al obtener los detalles de los servicios';\r\n      }\r\n    },\r\n    // eliminar(id) {\r\n    //   Swal.fire({\r\n    //     title: '¿Está seguro de eliminar este servicios?',\r\n    //     icon: 'warning',\r\n    //     showCancelButton: true,\r\n    //     confirmButtonColor: '#3085d6',\r\n    //     cancelButtonColor: '#d33',\r\n    //     confirmButtonText: 'Sí, eliminar',\r\n    //     cancelButtonText: 'Cancelar',\r\n    //   }).then((result) => {\r\n    //     if (result.isConfirmed) {\r\n    //       const token = localStorage.getItem('token');\r\n    //       if (!token) {\r\n    //         this.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\r\n    //         this.$router.push('/auth/login');\r\n    //         return;\r\n    //       }\r\n\r\n    //       const myHeaders = new Headers();\r\n    //       myHeaders.append(\"Content-Type\", \"application/json\");\r\n    //       myHeaders.append(\"Authorization\", `Bearer ${token}`);\r\n\r\n    //       const requestOptions = {\r\n    //         method: \"DELETE\",\r\n    //         headers: myHeaders,\r\n    //         redirect: \"follow\",\r\n    //       };\r\n\r\n    //       fetch(`http://127.0.0.1:8000/api/business/${id}`, requestOptions)\r\n    //         .then(response => response.json())\r\n    //         .then(result => {\r\n    //           if (result.status === 'success') {\r\n    //             Swal.fire(\r\n    //               'Eliminado!',\r\n    //               'El servicios ha sido eliminado correctamente.',\r\n    //               'success'\r\n    //             );\r\n    //             this.listarNegocios();\r\n    //           } else {\r\n    //             Swal.fire(\r\n    //               'Error!',\r\n    //               result.message || 'Hubo un problema al eliminar el servicios.',\r\n    //               'error'\r\n    //             );\r\n    //           }\r\n    //         })\r\n    //         .catch(err => {\r\n    //           console.error('Error al eliminar el servicios:', err);\r\n    //           Swal.fire(\r\n    //             'Error!',\r\n    //             'Hubo un problema al eliminar el servicios.',\r\n    //             'error'\r\n    //           );\r\n    //         });\r\n    //     }\r\n    //   });\r\n    // },\r\n  },\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}