{"ast":null,"code":"import _regeneratorRuntime from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { ref } from 'vue';\nimport { useToast } from 'vue-toastification';\nexport default {\n  data: function data() {\n    return {\n      nombre: '',\n      apellido: '',\n      telefono: '',\n      correo: '',\n      password: '',\n      passwordConfirmar: '',\n      errorMessage: '',\n      okMessage: '',\n      profilePhotoPreview: '',\n      busiId: this.$route.params.id,\n      type: 'password'\n    };\n  },\n  setup: function setup() {\n    var toast = useToast();\n    return {\n      toast: toast\n    };\n  },\n  watch: {\n    '$route.params.id': function $routeParamsId(newId) {\n      this.busiId = newId;\n    }\n  },\n  methods: {\n    limpiarError: function limpiarError() {\n      this.errorMessage = '';\n    },\n    filterName: function filterName(event) {\n      var onlyLettersAndSpaces = event.target.value.replace(/[^a-zA-Z\\s]/g, '');\n      this.nombre = onlyLettersAndSpaces;\n      this.errorMessage = '';\n    },\n    validarCampos: function validarCampos(_ref) {\n      var nombre = _ref.nombre,\n        apellido = _ref.apellido,\n        correo = _ref.correo,\n        telefono = _ref.telefono,\n        password = _ref.password,\n        passwordConfirmar = _ref.passwordConfirmar;\n      if (!nombre || !apellido || !correo || !telefono || !password || !passwordConfirmar) {\n        return 'Todos los campos son obligatorios.';\n      }\n      return '';\n    },\n    Nuevo: function Nuevo() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token, error, formData, response, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              token = localStorage.getItem('token');\n              if (token) {\n                _context.next = 5;\n                break;\n              }\n              _this.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\n              _this.$router.push('/auth/login');\n              return _context.abrupt(\"return\");\n            case 5:\n              _context.prev = 5;\n              error = _this.validarCampos({\n                nombre: _this.nombre,\n                apellido: _this.apellido,\n                correo: _this.correo,\n                password: _this.password,\n                passwordConfirmar: _this.passwordConfirmar,\n                telefono: _this.telefono.toString()\n              });\n              if (!error) {\n                _context.next = 10;\n                break;\n              }\n              _this.toast.warning(error);\n              return _context.abrupt(\"return\");\n            case 10:\n              formData = new FormData();\n              formData.append('name', _this.nombre);\n              formData.append('last_name', _this.apellido);\n              formData.append('phone_number', _this.telefono);\n              formData.append('email', _this.correo);\n              formData.append('password', _this.password);\n              formData.append('password_confirmation', _this.passwordConfirmar);\n              if (_this.$refs.fileInput.files.length > 0) {\n                formData.append('profile_photo', _this.$refs.fileInput.files[0]);\n              }\n              _context.next = 20;\n              return fetch(\"http://127.0.0.1:8000/api/staff/register/\".concat(_this.busiId), {\n                method: 'POST',\n                headers: {\n                  'Authorization': \"Bearer \".concat(token)\n                },\n                body: formData\n              });\n            case 20:\n              response = _context.sent;\n              _context.next = 23;\n              return response.json();\n            case 23:\n              result = _context.sent;\n              if (result.status === \"success\") {\n                _this.okMessage = \"Nuevo miembro del personal registrado correctamente.\";\n                _this.toast.success('Miembro del personal registrado correctamente.');\n                _this.nombre = '';\n                _this.apellido = '';\n                _this.correo = '';\n                _this.password = '';\n                _this.passwordConfirmar = '';\n                _this.telefono = '';\n              } else {\n                _this.errorMessage = result.message || 'Hubo un error en el registro.';\n                _this.toast.error(_this.errorMessage);\n              }\n              _context.next = 32;\n              break;\n            case 27:\n              _context.prev = 27;\n              _context.t0 = _context[\"catch\"](5);\n              console.error('Error en el registro', _context.t0);\n              _this.errorMessage = 'Hubo un problema al registrar la nueva mascota';\n              _this.toast.error('Hubo un error en el registro.');\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[5, 27]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["ref","useToast","data","nombre","apellido","telefono","correo","password","passwordConfirmar","errorMessage","okMessage","profilePhotoPreview","busiId","$route","params","id","type","setup","toast","watch","$routeParamsId","newId","methods","limpiarError","filterName","event","onlyLettersAndSpaces","target","value","replace","validarCampos","_ref","Nuevo","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","error","formData","response","result","wrap","_callee$","_context","prev","next","localStorage","getItem","$router","push","abrupt","toString","warning","FormData","append","$refs","fileInput","files","length","fetch","concat","method","headers","body","sent","json","status","success","message","t0","console","stop"],"sources":["C:\\YARELI\\New\\VUE\\DogToralia\\src\\pages\\admin\\servicio\\nuevoServicio.vue"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <form class=\"card\" @submit.prevent=\"Nuevo\">\r\n      <div class=\"card-header pb-0\">\r\n        <h4 class=\"card-title mb-0\">Registrar Nuevo Servicio{{ busiId}}</h4>\r\n      </div>\r\n      <div class=\"card-body\"> \r\n        <div class=\"row align-items-center\">\r\n             <!-- Nombre -->\r\n             <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label f-w-500\">Nombre del servicio</label>\r\n              <input v-model=\"nombre\" class=\"form-control\" @input=\"filterName\">\r\n            </div>\r\n          </div>\r\n          <!-- Apellido -->\r\n          <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label f-w-500\">Precio</label>\r\n              <input v-model=\"precio\"  type=\"number\" class=\"form-control\" @input=\"filterApe\">\r\n            </div>\r\n          </div>\r\n          <!--  -->\r\n          <div class=\"col-sm-6 col-md-4\">\r\n                <div class=\"mb-3\">\r\n                  <div class=\"d-flex\">\r\n                    <div class=\"form-check form-check-inline radio radio-primary\">\r\n                      <input class=\"form-check-input\" id=\"radioinline1\" type=\"radio\" name=\"genero\" value=\"USD\" v-model=\"currency\">\r\n                      <label class=\"form-check-label mb-0\" for=\"radioinline1\">USD</label>\r\n                    </div>\r\n                    <div class=\"form-check form-check-inline radio radio-primary\">\r\n                      <input class=\"form-check-input\" id=\"radioinline2\" type=\"radio\" name=\"genero\" value=\"MXN\" v-model=\"currency\">\r\n                      <label class=\"form-check-label mb-0\" for=\"radioinline2\">MXN</label>\r\n                    </div>\r\n                  </div> \r\n                </div>\r\n              </div> \r\n          <!-- Correo -->\r\n          <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label f-w-500\">Duración</label>\r\n              <input v-model=\"duracion\" @input=\"limpiarError\"  class=\"form-control\" >\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"mb-3\">\r\n                <label class=\"form-label\">Categoria</label>\r\n                <select v-model=\"categoria\"class=\"form-select\"> \r\n                    <option></option>\r\n                    <option>Estetica</option>\r\n                    <option>Veterinaria</option>\r\n                    <option>Estetica Veterianeria</option>\r\n                </select>                          \r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-8\">\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label f-w-500\">Descripción:</label>\r\n                <textarea v-model=\"descripcion\" @input=\"limpiarError\" class=\"form-control\" rows=\"5\" placeholder=\"Agrega la descripción del servicio\"></textarea>\r\n              </div>\r\n            </div>\r\n          <!-- Confirmar Password -->\r\n          <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label f-w-500\">Confirmar Password</label>\r\n              <div class=\"form-input position-relative\">\r\n                <input v-model=\"passwordConfirmar\" @input=\"limpiarError\" :type=\"type\" class=\"form-control\" placeholder=\"*********\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-footer d-flex justify-content-end\">\r\n        <button class=\"btn btn-secondary\" type=\"submit\">Registrar</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n<!-- jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj -->\r\n\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useToast } from 'vue-toastification';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      nombre: '',      \r\n      apellido: '',\r\n      telefono: '',\r\n      correo: '',\r\n      password: '',\r\n      passwordConfirmar: '',\r\n      errorMessage: '',\r\n      okMessage: '',\r\n      profilePhotoPreview: '',\r\n      busiId: this.$route.params.id,\r\n      type: 'password',\r\n    };\r\n  },\r\n  setup() {\r\n    const toast = useToast();\r\n    return { toast }; \r\n  },\r\n  watch: {\r\n    '$route.params.id': function(newId) {\r\n      this.busiId = newId;\r\n    }\r\n  },\r\n  methods: {\r\n    limpiarError() {\r\n      this.errorMessage = '';\r\n    },\r\n    filterName(event) {\r\n      const onlyLettersAndSpaces = event.target.value.replace(/[^a-zA-Z\\s]/g, '');\r\n      this.nombre = onlyLettersAndSpaces;\r\n      this.errorMessage = '';\r\n    },\r\n    validarCampos({ nombre, apellido, correo, telefono, password, passwordConfirmar }) {\r\n      if (!nombre || !apellido || !correo || !telefono || !password || !passwordConfirmar) {\r\n        return 'Todos los campos son obligatorios.';\r\n      }\r\n     \r\n      return '';\r\n    },\r\n    async Nuevo() {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        this.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\r\n        this.$router.push('/auth/login');\r\n        return;\r\n      }\r\n\r\n      try { \r\n        const error = this.validarCampos({\r\n          nombre: this.nombre,\r\n          apellido: this.apellido,\r\n          correo: this.correo,\r\n          password: this.password,\r\n          passwordConfirmar: this.passwordConfirmar,\r\n          telefono: this.telefono.toString(),\r\n        });\r\n\r\n        if (error) {\r\n          this.toast.warning(error);\r\n          return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('name', this.nombre);\r\n        formData.append('last_name', this.apellido); \r\n        formData.append('phone_number', this.telefono);\r\n        formData.append('email', this.correo);\r\n        formData.append('password', this.password);\r\n        formData.append('password_confirmation', this.passwordConfirmar);\r\n        if (this.$refs.fileInput.files.length > 0) {\r\n          formData.append('profile_photo', this.$refs.fileInput.files[0]);\r\n        }\r\n\r\n        const response = await fetch(`http://127.0.0.1:8000/api/staff/register/${this.busiId}`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          },\r\n          body: formData\r\n        });\r\n\r\n        const result = await response.json();\r\n        if (result.status === \"success\") {\r\n          this.okMessage = \"Nuevo miembro del personal registrado correctamente.\";\r\n          this.toast.success('Miembro del personal registrado correctamente.');\r\n          this.nombre = '';\r\n          this.apellido = '';\r\n          this.correo = '';\r\n          this.password = '';\r\n          this.passwordConfirmar = '';\r\n          this.telefono = '';\r\n        } else {\r\n          this.errorMessage = result.message || 'Hubo un error en el registro.';\r\n          this.toast.error(this.errorMessage);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error en el registro', error);\r\n        this.errorMessage = 'Hubo un problema al registrar la nueva mascota';\r\n        this.toast.error('Hubo un error en el registro.');\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.profile-photo {\r\n  width: 150px; \r\n  height: 150px; \r\n  object-fit: cover; \r\n  border-radius: 0; \r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}