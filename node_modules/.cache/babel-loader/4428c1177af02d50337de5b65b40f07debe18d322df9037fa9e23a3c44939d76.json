{"ast":null,"code":"import _regeneratorRuntime from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nexport default {\n  props: {\n    negocioId: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      servi: [] // Asegúrate de definir el array para almacenar los servicios\n    };\n  },\n  created: function created() {\n    this.obtenerServicios();\n  },\n  methods: {\n    // ...mapActions(['refreshToken']),\n    verDetalle: function verDetalle(id) {\n      this.$router.push({\n        name: 'verServicio',\n        params: {\n          id: id\n        }\n      });\n    },\n    getRandomStyle: function getRandomStyle() {\n      var colors = [{\n        light: '#a2d9ff',\n        dark: '#4faad5'\n      },\n      // Azul claro y azul oscuro\n      {\n        light: '#c2eaf2',\n        dark: '#4faad5'\n      },\n      // Azul claro y azul moderado\n      {\n        light: '#b0d8eb',\n        dark: '#4faad5'\n      },\n      // Otro tono de azul claro\n      {\n        light: '#f7d794',\n        dark: '#e6ae30'\n      },\n      // Amarillo claro y amarillo oscuro\n      {\n        light: '#d4a1d4',\n        dark: '#9b59b6'\n      },\n      // Morado claro y morado oscuro\n      {\n        light: '#a3d9a5',\n        dark: '#61ae41'\n      },\n      // Verde claro y verde oscuro\n      {\n        light: '#f5b7b1',\n        dark: '#e74c3c'\n      } // Rojo claro y rojo oscuro\n      ];\n      var randomColor = colors[Math.floor(Math.random() * colors.length)];\n      return {\n        headerStyle: {\n          backgroundColor: randomColor.dark,\n          color: 'white',\n          padding: '10px',\n          borderRadius: '8px 8px 0 0'\n        },\n        bodyStyle: {\n          backgroundColor: randomColor.light,\n          padding: '25px',\n          borderRadius: '0 0 8px 8px'\n        }\n      };\n    },\n    obtenerServicios: function obtenerServicios() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var token, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              // const newToken = await this.refreshToken();\n              // const token = newToken || localStorage.getItem('token');\n              token = localStorage.getItem('token');\n              if (token) {\n                _context.next = 5;\n                break;\n              }\n              _this.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\n              _this.$router.push('/auth/login');\n              return _context.abrupt(\"return\");\n            case 5:\n              _context.prev = 5;\n              _context.next = 8;\n              return axios.get(\"http://127.0.0.1:8000/api/services/business/\".concat(_this.negocioId));\n            case 8:\n              response = _context.sent;\n              _this.servi = response.data.services.data; // Guarda los datos de los servicios en el array\n              console.log(_this.servi); // Opcional: para ver qué se está guardando\n              _context.next = 16;\n              break;\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](5);\n              console.error(\"Error al obtener los servicios:\", _context.t0);\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[5, 13]]);\n      }))();\n    },\n    eliminar: function eliminar(id) {\n      var _this2 = this;\n      Swal.fire({\n        title: '¿Está seguro de eliminar este servicio?',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Sí, eliminar',\n        cancelButtonText: 'Cancelar'\n      }).then(function (result) {\n        if (result.isConfirmed) {\n          var token = localStorage.getItem('token');\n          // const newToken = await this.refreshToken();\n          // const token = newToken || localStorage.getItem('token');\n\n          if (!token) {\n            _this2.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\n            _this2.$router.push('/auth/login');\n            return;\n          }\n          var myHeaders = new Headers();\n          myHeaders.append(\"Content-Type\", \"application/json\");\n          myHeaders.append(\"Authorization\", \"Bearer \".concat(token));\n          var requestOptions = {\n            method: \"DELETE\",\n            headers: myHeaders,\n            redirect: \"follow\"\n          };\n          fetch(\"http://127.0.0.1:8000/api/services/\".concat(id), requestOptions).then(function (response) {\n            return response.json();\n          }).then(function (result) {\n            if (result.status === 'success') {\n              Swal.fire('Eliminado!', 'El servicio ha sido eliminado correctamente.', 'success');\n              _this2.obtenerServicios(); // Asegúrate de que listarNegocios esté definido y vinculado correctamente\n            } else {\n              Swal.fire('Error!', result.message || 'Hubo un problema al eliminar el servicio.', 'error');\n            }\n          })[\"catch\"](function (err) {\n            console.error('Error al eliminar el servicio:', err);\n            Swal.fire('Error!', 'Hubo un problema al eliminar el servicio.', 'error');\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","Swal","props","negocioId","type","Number","required","data","servi","created","obtenerServicios","methods","verDetalle","id","$router","push","name","params","getRandomStyle","colors","light","dark","randomColor","Math","floor","random","length","headerStyle","backgroundColor","color","padding","borderRadius","bodyStyle","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","response","wrap","_callee$","_context","prev","next","localStorage","getItem","errorMessage","abrupt","get","concat","sent","services","console","log","t0","error","stop","eliminar","_this2","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","myHeaders","Headers","append","requestOptions","method","headers","redirect","fetch","json","status","message","err"],"sources":["C:\\YARELI\\New\\VUE\\DogToralia\\src\\pages\\admin\\servicio\\servicios.vue"],"sourcesContent":["<template>\r\n    <div class=\"col-12 colorfull-kanban\">\r\n        <div class=\"card-body pb-0\">\r\n          <div class=\"d-flex row\" id=\"demo2\">\r\n                <div class=\"kanban-container\" v-for=\"(servi, index) in servi\" :key=\"servi.id\">\r\n                <div class=\"kanban-board col-xxl-4 col-md-12\" style=\"width: 400px; margin-left: 10px; margin-right: 10px\">\r\n                    <!-- Genera estilos aleatorios para cada tarjeta -->\r\n                    <div :style=\"styles = getRandomStyle()\">\r\n                        <header class=\"kanban-board-header\" :style=\"styles.headerStyle\">\r\n                            <div class=\"kanban-title-board\" style=\"font-size: 1.2em; font-weight: bold;\">{{ servi.name }}</div>\r\n                        </header>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"kanban-item\" :style=\"styles.bodyStyle\">\r\n                                <h5 class=\"f-w-600\">Descripción:\r\n                                    <h5 class=\"f-w-300\">{{ servi.description }}</h5>\r\n                                </h5>\r\n                                <h5 class=\"f-w-600\">Precio:\r\n                                    <h5 class=\"f-w-300\">{{ servi.price }} {{ servi.currency }}</h5> \r\n                                </h5>\r\n                                <h5 class=\"f-w-600\">Duración:\r\n                                    <h5 class=\"f-w-300\">{{ servi.duration }} min</h5>\r\n                                </h5>\r\n                           </div>\r\n                           <div div class=\"d-flex \">\r\n                        <button class=\"btn btn-outline-danger mx-1\" @click=\"eliminar(servi.id)\">\r\n                            <i class=\"icofont icofont-ui-delete\"></i>\r\n                        </button>\r\n                        <button class=\"btn btn-outline-success-2x\" @click=\"verDetalle(servi.id)\">\r\n                            <!-- <i class=\"icon-eye\"></i> -->\r\n                            <i class=\"icofont icofont-pencil-alt-2\"></i>\r\n                        </button>\r\n                        </div>\r\n                        </div>\r\n                       \r\n                    </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n  <script>\r\n  import axios from 'axios';\r\n  import Swal from 'sweetalert2';\r\n  export default {\r\n    props: {\r\n      negocioId: {\r\n        type: Number,\r\n        required: true\r\n      }\r\n    },\r\n    data() {\r\n      return {\r\n        servi: [],  // Asegúrate de definir el array para almacenar los servicios\r\n      };\r\n    },\r\n    created() {\r\n      this.obtenerServicios();\r\n    },\r\n    methods: {\r\n      // ...mapActions(['refreshToken']),\r\n      verDetalle(id) {\r\n      this.$router.push({ name: 'verServicio', params: { id: id } });\r\n    },\r\n    getRandomStyle() {\r\n        const colors = [\r\n            { light: '#a2d9ff', dark: '#4faad5' }, // Azul claro y azul oscuro\r\n            { light: '#c2eaf2', dark: '#4faad5' }, // Azul claro y azul moderado\r\n            { light: '#b0d8eb', dark: '#4faad5' }, // Otro tono de azul claro\r\n            { light: '#f7d794', dark: '#e6ae30' }, // Amarillo claro y amarillo oscuro\r\n            { light: '#d4a1d4', dark: '#9b59b6' }, // Morado claro y morado oscuro\r\n            { light: '#a3d9a5', dark: '#61ae41' }, // Verde claro y verde oscuro\r\n            { light: '#f5b7b1', dark: '#e74c3c' }, // Rojo claro y rojo oscuro\r\n        ];\r\n            const randomColor = colors[Math.floor(Math.random() * colors.length)];\r\n        return {\r\n            headerStyle: {\r\n            backgroundColor: randomColor.dark,\r\n            color: 'white',\r\n            padding: '10px',\r\n            borderRadius: '8px 8px 0 0'\r\n            },\r\n            bodyStyle: {\r\n            backgroundColor: randomColor.light,\r\n            padding: '25px',\r\n            borderRadius: '0 0 8px 8px'\r\n            }\r\n        };\r\n},\r\n      async obtenerServicios() {\r\n\r\n            // const newToken = await this.refreshToken();\r\n            // const token = newToken || localStorage.getItem('token');\r\n const token = localStorage.getItem('token');\r\n            if (!token) {\r\n        this.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\r\n        this.$router.push('/auth/login');\r\n        return;\r\n      }\r\n\r\n        try {\r\n          const response = await axios.get(`http://127.0.0.1:8000/api/services/business/${this.negocioId}`);\r\n          this.servi = response.data.services.data;  // Guarda los datos de los servicios en el array\r\n          console.log(this.servi);  // Opcional: para ver qué se está guardando\r\n        } catch (error) {\r\n          console.error(\"Error al obtener los servicios:\", error);\r\n        }\r\n      },\r\n      eliminar(id) {\r\n        \r\n      Swal.fire({\r\n        title: '¿Está seguro de eliminar este servicio?',\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Sí, eliminar',\r\n        cancelButtonText: 'Cancelar',\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n          const token = localStorage.getItem('token');\r\n            // const newToken = await this.refreshToken();\r\n            // const token = newToken || localStorage.getItem('token');\r\n\r\n          if (!token) {\r\n            this.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\r\n            this.$router.push('/auth/login');\r\n            return;\r\n          }\r\n\r\n          const myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n          myHeaders.append(\"Authorization\", `Bearer ${token}`);\r\n\r\n          const requestOptions = {\r\n            method: \"DELETE\", \r\n            headers: myHeaders,\r\n            redirect: \"follow\",\r\n          };\r\n\r\n          fetch(`http://127.0.0.1:8000/api/services/${id}`, requestOptions)\r\n            .then(response => response.json())\r\n            .then(result => {\r\n                if (result.status === 'success') {\r\n                  Swal.fire(\r\n                    'Eliminado!',\r\n                    'El servicio ha sido eliminado correctamente.',\r\n                    'success'\r\n                  );\r\n                  this.obtenerServicios(); // Asegúrate de que listarNegocios esté definido y vinculado correctamente\r\n                } else {\r\n                  Swal.fire(\r\n                    'Error!',\r\n                    result.message || 'Hubo un problema al eliminar el servicio.',\r\n                    'error'\r\n                  );\r\n                }\r\n              })\r\n            .catch(err => {\r\n              console.error('Error al eliminar el servicio:', err);\r\n              Swal.fire(\r\n                'Error!',\r\n                'Hubo un problema al eliminar el servicio.',\r\n                'error'\r\n              );\r\n            });\r\n        }\r\n      });\r\n    },\r\n\r\n\r\n\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n\r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}