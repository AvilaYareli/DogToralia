{"ast":null,"code":"import \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport { createRouter, createWebHistory } from 'vue-router';\nimport BodyView from \"@/layout/BodyView.vue\";\nimport indexDashbord from \"@/pages/indexDashbord.vue\";\nimport login from \"@/auth/login.vue\";\nimport Register from \"../components/register.vue\";\nimport ForgetPassword from \"../components/forgetpassword.vue\";\n// import Sesion from \"@/pages/sesionVue.vue\"\n// import indexUser from \"@/auth/indexUser.vue\"\n\nvar routes = [{\n  path: '/auth/indexUser',\n  name: 'indexUser',\n  component: indexUser\n}, {\n  path: '/Sesion',\n  name: 'Sesion',\n  component: Sesion\n}, {\n  path: '/components/forgetpassword',\n  name: 'ForgetPassword',\n  component: ForgetPassword\n}, {\n  path: '/auth/register',\n  name: 'Register',\n  component: Register\n}, {\n  path: \"/auth/login\",\n  name: \"login\",\n  component: login,\n  meta: {\n    title: 'login-Tivo Starter-kit'\n  }\n}, {\n  path: \"/\",\n  component: BodyView,\n  children: [{\n    path: \"dashboard\",\n    name: \"dashbord\",\n    component: indexDashbord,\n    meta: {\n      title: 'Tivo Starter-kit - Premium Vue Admin Template'\n    }\n  }]\n}];\nvar router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: routes\n});\n\n// router.beforeEach((to,) => {\n//   if (typeof (to.meta.title) === 'string') {\n//     document.title = to.meta.title;\n//   }\n\n//   });\nrouter.beforeEach(function (to, from, next) {\n  // Verificar si la ruta requiere autenticación\n  if (to.matched.some(function (record) {\n    return record.meta.requiresAuth;\n  })) {\n    var loggedIn = localStorage.getItem('token');\n    if (!loggedIn) {\n      // Si no hay token, redirigir al login\n      next({\n        name: 'login'\n      });\n    } else {\n      next({\n        name: 'dashboard'\n      }); // Continuar navegación\n    }\n  } else {\n    next(); //  continuar navegación\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","BodyView","indexDashbord","login","Register","ForgetPassword","routes","path","name","component","indexUser","Sesion","meta","title","children","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","requiresAuth","loggedIn","localStorage","getItem"],"sources":["C:/YARELI/New/VUE/DogToralia/src/router/index.js"],"sourcesContent":["\nimport { createRouter, createWebHistory } from 'vue-router'\nimport BodyView from \"@/layout/BodyView.vue\"\nimport indexDashbord from \"@/pages/indexDashbord.vue\"\nimport login from \"@/auth/login.vue\"\nimport Register from \"../components/register.vue\"\nimport ForgetPassword from \"../components/forgetpassword.vue\"\n// import Sesion from \"@/pages/sesionVue.vue\"\n// import indexUser from \"@/auth/indexUser.vue\"\n\nconst routes = [\n  {\n    path: '/auth/indexUser',\n    name: 'indexUser',\n    component: indexUser\n  },\n  {\n    path: '/Sesion',\n    name: 'Sesion',\n    component: Sesion\n  },\n  {\n    path: '/components/forgetpassword',\n    name: 'ForgetPassword',\n    component: ForgetPassword\n  },\n  {\n    path: '/auth/register',\n    name: 'Register',\n    component: Register\n  },\n  {\n    path:\"/auth/login\",\n    name:\"login\",\n    component:login,\n    meta:{\n      title:'login-Tivo Starter-kit'\n    }\n  },\n {\n   path:\"/\",\n   component:BodyView,\n   children:[\n     {\n       path:\"dashboard\",\n       name:\"dashbord\",\n       component:indexDashbord,\n       meta: {\n        title: 'Tivo Starter-kit - Premium Vue Admin Template',\n      }\n     }\n   ]\n }\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\n// router.beforeEach((to,) => {\n//   if (typeof (to.meta.title) === 'string') {\n//     document.title = to.meta.title;\n//   }\n   \n//   });\nrouter.beforeEach((to, from, next) => {\n  // Verificar si la ruta requiere autenticación\n  if (to.matched.some(record => record.meta.requiresAuth)) {\n    const loggedIn = localStorage.getItem('token');\n\n    if (!loggedIn) {\n      // Si no hay token, redirigir al login\n      next({ name: 'login' });\n    } else {\n      next({name:'dashboard'}); // Continuar navegación\n    }\n  } else {\n    next(); //  continuar navegación\n  }\n});\n  \n\n\nexport default router"],"mappings":";;AACA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAOC,KAAK,MAAM,kBAAkB;AACpC,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,cAAc,MAAM,kCAAkC;AAC7D;AACA;;AAEA,IAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,iBAAiB;EACvBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEC;AACb,CAAC,EACD;EACEH,IAAI,EAAE,SAAS;EACfC,IAAI,EAAE,QAAQ;EACdC,SAAS,EAAEE;AACb,CAAC,EACD;EACEJ,IAAI,EAAE,4BAA4B;EAClCC,IAAI,EAAE,gBAAgB;EACtBC,SAAS,EAAEJ;AACb,CAAC,EACD;EACEE,IAAI,EAAE,gBAAgB;EACtBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEL;AACb,CAAC,EACD;EACEG,IAAI,EAAC,aAAa;EAClBC,IAAI,EAAC,OAAO;EACZC,SAAS,EAACN,KAAK;EACfS,IAAI,EAAC;IACHC,KAAK,EAAC;EACR;AACF,CAAC,EACF;EACEN,IAAI,EAAC,GAAG;EACRE,SAAS,EAACR,QAAQ;EAClBa,QAAQ,EAAC,CACP;IACEP,IAAI,EAAC,WAAW;IAChBC,IAAI,EAAC,UAAU;IACfC,SAAS,EAACP,aAAa;IACvBU,IAAI,EAAE;MACLC,KAAK,EAAE;IACT;EACD,CAAC;AAEL,CAAC,CACD;AAED,IAAME,MAAM,GAAGhB,YAAY,CAAC;EAC1BiB,OAAO,EAAEhB,gBAAgB,CAACiB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/Cb,MAAM,EAANA;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;;AAEA;AACAS,MAAM,CAACK,UAAU,CAAC,UAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAK;EACpC;EACA,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAAC,UAAAC,MAAM;IAAA,OAAIA,MAAM,CAACd,IAAI,CAACe,YAAY;EAAA,EAAC,EAAE;IACvD,IAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE9C,IAAI,CAACF,QAAQ,EAAE;MACb;MACAL,IAAI,CAAC;QAAEf,IAAI,EAAE;MAAQ,CAAC,CAAC;IACzB,CAAC,MAAM;MACLe,IAAI,CAAC;QAACf,IAAI,EAAC;MAAW,CAAC,CAAC,CAAC,CAAC;IAC5B;EACF,CAAC,MAAM;IACLe,IAAI,CAAC,CAAC,CAAC,CAAC;EACV;AACF,CAAC,CAAC;AAIF,eAAeR,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}