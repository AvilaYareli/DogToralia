{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport Menu from \"../../data/menu.json\";\nconsole.log('menu.js');\nvar state = {\n  data: Menu.data,\n  togglesidebar: true,\n  activeoverlay: false,\n  customizer: '',\n  searchData: [],\n  searchOpen: false,\n  hideRightArrowRTL: false,\n  hideLeftArrowRTL: true,\n  hideRightArrow: true,\n  hideLeftArrow: true,\n  width: 0,\n  height: 0,\n  margin: 0,\n  menuWidth: 0,\n  message: 'Message test'\n};\nvar mutations = {\n  setData: function setData(state, userType) {\n    console.log('¿quien esta dentro?');\n    console.log('userType:', userType);\n    console.log(\"okokok\", Menu.dataUser);\n    if (userType === 'pet_owner') {\n      state.data = Menu.dataUser;\n    }\n\n    // else if (userType === 'business_owner') {\n    //   state.data = Menu.dataAdmin;\n    // } else {\n    //   state.data = Menu.data;\n    // }\n  },\n  newMessage: function newMessage(state) {\n    state.message = new Date();\n  },\n  // setData: (state, isUser) => {\n  //   if (isUser) {\n  //     state.data = Menu.dataUser;\n  //   } else {\n  //     state.data = Menu.data;\n  //   }\n  // },\n  // setDataAdmin: (state, isAdmin) => {\n  //   if (isAdmin) {\n  //     state.data = Menu.dataAdmin;\n  //   } else {\n  //     state.data = Menu.data;\n  //   }\n  // },\n\n  searchTerm: function searchTerm(state, term) {\n    var items = [];\n    var searchval = term.toLowerCase();\n    state.data.filter(function (menuItems) {\n      if (menuItems.title) {\n        if (menuItems.title.toLowerCase().includes(searchval) && menuItems.type === 'link') {\n          items.push(menuItems);\n        }\n        if (!menuItems.children) return false;\n        menuItems.children.filter(function (subItems) {\n          if (subItems.title.toLowerCase().includes(searchval) && subItems.type === 'link') {\n            subItems.icon = menuItems.icon;\n            items.push(subItems);\n          }\n          if (!subItems.children) return false;\n          subItems.children.filter(function (suSubItems) {\n            if (suSubItems.title.toLowerCase().includes(searchval)) {\n              suSubItems.icon = menuItems.icon;\n              items.push(suSubItems);\n            }\n          });\n        });\n        state.searchData = items;\n      }\n    });\n  },\n  opensidebar: function opensidebar(state) {\n    console.log(\"sasasasa\");\n    state.togglesidebar = !state.togglesidebar;\n    if (window.innerWidth < 991) {\n      state.activeoverlay = true;\n    } else {\n      state.activeoverlay = false;\n    }\n  },\n  resizetoggle: function resizetoggle(state) {\n    if (window.innerWidth < 1199) {\n      state.togglesidebar = false;\n    } else {\n      state.togglesidebar = true;\n    }\n  },\n  setNavActive: function setNavActive(state, item) {\n    if (!item.active) {\n      state.data.forEach(function (a) {\n        if (state.data.includes(item)) a.active = false;\n        if (!a.children) return false;\n        a.children.forEach(function (b) {\n          if (a.children.includes(item)) {\n            b.active = false;\n          }\n        });\n      });\n    }\n    item.active = !item.active;\n  },\n  setActiveRoute: function setActiveRoute(state, item) {\n    state.data.filter(function (menuItem) {\n      if (menuItem !== item) menuItem.active = false;\n      if (menuItem.children && menuItem.children.includes(item)) menuItem.active = true;\n      if (menuItem.children) {\n        menuItem.children.filter(function (submenuItems) {\n          if (submenuItems.children && submenuItems.children.includes(item)) {\n            menuItem.active = true;\n            submenuItems.active = true;\n          }\n        });\n      }\n    });\n  }\n};\nvar actions = {\n  setNavActive: function setNavActive(context, item) {\n    context.commit('setNavActive', item);\n  },\n  opensidebar: function opensidebar(context, term) {\n    context.commit('opensidebar', term);\n  },\n  resizetoggle: function resizetoggle(context, term) {\n    context.commit('resizetoggle', term);\n  },\n  searchTerm: function searchTerm(context, term) {\n    context.commit('searchTerm', term);\n  },\n  initializeMenu: function initializeMenu(_ref) {\n    var commit = _ref.commit;\n    var token = localStorage.getItem('token');\n    if (token) {\n      var role = localStorage.getItem('userType');\n      commit('setData', role); // Pass role to set the appropriate menu\n    }\n  },\n  addMessage: function addMessage(_ref2) {\n    var commit = _ref2.commit;\n    commit('newMessage');\n  } // initializeMenu({ commit }) {\n  //   const usertype = localStorage.getItem('token');\n  //   if (usertype) {\n  //     const role = localStorage.getItem('userType');\n  //     if (role === 'pet_owner') {\n  //       commit('setData', true); // Pass true to set user menu\n  //     } \n  //   }\n  // },\n  // initializeAdminMenu({ commit }) {\n  //   const usertype = localStorage.getItem('token');\n  //   if (usertype) {\n  //     const role = localStorage.getItem('userType');\n  //     if (role === 'business_owner') {\n  //       commit('setDataAdmin', true); // Pass true to set admin menu\n  //     } \n  //   }\n  // },\n};\n// dispatchEvent(\"\",true,{});\n\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};","map":{"version":3,"names":["Menu","console","log","state","data","togglesidebar","activeoverlay","customizer","searchData","searchOpen","hideRightArrowRTL","hideLeftArrowRTL","hideRightArrow","hideLeftArrow","width","height","margin","menuWidth","message","mutations","setData","userType","dataUser","newMessage","Date","searchTerm","term","items","searchval","toLowerCase","filter","menuItems","title","includes","type","push","children","subItems","icon","suSubItems","opensidebar","window","innerWidth","resizetoggle","setNavActive","item","active","forEach","a","b","setActiveRoute","menuItem","submenuItems","actions","context","commit","initializeMenu","_ref","token","localStorage","getItem","role","addMessage","_ref2","namespaced"],"sources":["C:/YARELI/New/VUE/DogToralia/src/store/modules/menu.js"],"sourcesContent":["import Menu from \"../../data/menu.json\"\nconsole.log('menu.js');\n\nconst state ={\ndata:Menu.data,\ntogglesidebar: true,\n  activeoverlay : false,\n  customizer: '',\n  searchData: [],\n  searchOpen : false,\n  hideRightArrowRTL: false,\n  hideLeftArrowRTL: true,\n  hideRightArrow: true,\n  hideLeftArrow: true,\n  width: 0,\n  height: 0,\n  margin: 0,\n  menuWidth: 0,\n   message: 'Message test'\n};\nconst mutations = {\n\n  setData: (state, userType) => {\n    console.log('¿quien esta dentro?')\n    console.log('userType:',userType)\n   console.log(\"okokok\" , Menu.dataUser);\n\n    if (userType === 'pet_owner') {\n      state.data = Menu.dataUser;\n    } \n\n    // else if (userType === 'business_owner') {\n    //   state.data = Menu.dataAdmin;\n    // } else {\n    //   state.data = Menu.data;\n    // }\n  },  newMessage (state) {\n    state.message = new Date()\n   },\n\n  // setData: (state, isUser) => {\n  //   if (isUser) {\n  //     state.data = Menu.dataUser;\n  //   } else {\n  //     state.data = Menu.data;\n  //   }\n  // },\n  // setDataAdmin: (state, isAdmin) => {\n  //   if (isAdmin) {\n  //     state.data = Menu.dataAdmin;\n  //   } else {\n  //     state.data = Menu.data;\n  //   }\n  // },\n\n  searchTerm: (state, term) => {\n\n    let items = [];\n    var searchval = term.toLowerCase();\n    state.data.filter(menuItems => {\n      \n      if (menuItems.title) {\n        if (menuItems.title.toLowerCase().includes(searchval) && menuItems.type === 'link')  {\n          items.push(menuItems);\n        }\n        if (!menuItems.children) return false;\n        menuItems.children.filter(subItems => {\n          if (subItems.title.toLowerCase().includes(searchval) && subItems.type === 'link') {\n            subItems.icon = menuItems.icon;\n            items.push(subItems);\n          }\n          if (!subItems.children) return false;\n          subItems.children.filter(suSubItems => {\n            if (suSubItems.title.toLowerCase().includes(searchval)){\n              suSubItems.icon = menuItems.icon;\n              items.push(suSubItems);\n            }\n          });\n        });\n        state.searchData = items;\n      }\n    });\n  },\n  opensidebar: (state) => {\n    console.log(\"sasasasa\")\n    state.togglesidebar = !state.togglesidebar;\n    if (window.innerWidth < 991) {\n      state.activeoverlay = true;\n    } else {\n      state.activeoverlay = false;\n    }\n  },\n  resizetoggle: (state) => {\n    if (window.innerWidth < 1199) {\n      state.togglesidebar = false;\n    } else {\n      state.togglesidebar = true;\n    }\n  },\n  setNavActive: (state, item) => {\n    if (!item.active) {\n      state.data.forEach(a => {\n        if (state.data.includes(item))\n          a.active = false;\n        if (!a.children) return false;\n        a.children.forEach(b => {\n          if (a.children.includes(item)) {\n            b.active = false;\n          }\n        });\n      });\n    }\n    item.active = !item.active;\n  },\n  setActiveRoute: (state, item) => {\n    state.data.filter(menuItem => {\n      if (menuItem !== item)\n        menuItem.active = false;\n      if (menuItem.children && menuItem.children.includes(item))\n        menuItem.active = true;\n      if (menuItem.children) {\n        menuItem.children.filter(submenuItems => {\n          if (submenuItems.children && submenuItems.children.includes(item)) {\n            menuItem.active = true;\n            submenuItems.active = true;\n          }\n        });\n      }\n    });\n  }\n};\nconst actions = {\n \n  setNavActive: (context,item) => {\n    context.commit('setNavActive', item);\n  },\n  opensidebar: (context, term) => {\n    context.commit('opensidebar', term);\n  },\n  resizetoggle: (context, term) => {\n    context.commit('resizetoggle', term);\n  },\n  searchTerm: (context, term) => {\n    context.commit('searchTerm', term);\n  },\n\n  initializeMenu({ commit }) {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const role = localStorage.getItem('userType');\n      commit('setData', role); // Pass role to set the appropriate menu\n    }\n  },\n\n  addMessage ({commit}) {\n    commit('newMessage')\n}\n  \n  // initializeMenu({ commit }) {\n  //   const usertype = localStorage.getItem('token');\n  //   if (usertype) {\n  //     const role = localStorage.getItem('userType');\n  //     if (role === 'pet_owner') {\n  //       commit('setData', true); // Pass true to set user menu\n  //     } \n      \n  //   }\n  // },\n  // initializeAdminMenu({ commit }) {\n  //   const usertype = localStorage.getItem('token');\n  //   if (usertype) {\n  //     const role = localStorage.getItem('userType');\n  //     if (role === 'business_owner') {\n  //       commit('setDataAdmin', true); // Pass true to set admin menu\n  //     } \n      \n  //   }\n  // },\n\n\n};\n// dispatchEvent(\"\",true,{});\n\nexport default {\n    namespaced: true,\n    state,\n    mutations,\n    actions,\n    \n  };\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}