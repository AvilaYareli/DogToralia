{"ast":null,"code":"import _toConsumableArray from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _regeneratorRuntime from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.some.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport { useToast } from 'vue-toastification';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nexport default {\n  data: function data() {\n    return {\n      days: [\"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\n      selectedDays: [],\n      busiId: this.$route.params.id,\n      schedule: [{\n        day_of_week: 'Monday',\n        time_slots: [{\n          start_time: '',\n          end_time: ''\n        }]\n      }, {\n        day_of_week: 'Tuesday',\n        time_slots: [{\n          start_time: '',\n          end_time: ''\n        }]\n      }, {\n        day_of_week: 'Wednesday',\n        time_slots: [{\n          start_time: '',\n          end_time: ''\n        }]\n      }, {\n        day_of_week: 'Thursday',\n        time_slots: [{\n          start_time: '',\n          end_time: ''\n        }]\n      }, {\n        day_of_week: 'Friday',\n        time_slots: [{\n          start_time: '',\n          end_time: ''\n        }]\n      }, {\n        day_of_week: 'Saturday',\n        time_slots: [{\n          start_time: '',\n          end_time: ''\n        }]\n      }, {\n        day_of_week: 'Sunday',\n        time_slots: [{\n          start_time: '',\n          end_time: ''\n        }]\n      }]\n    };\n  },\n  setup: function setup() {\n    var toast = useToast();\n    return {\n      toast: toast\n    };\n  },\n  methods: {\n    addSlot: function addSlot(index) {\n      this.schedule[index].time_slots.push({\n        start_time: '',\n        end_time: ''\n      });\n    },\n    removeSlot: function removeSlot(dayIndex, slotIndex) {\n      this.schedule[dayIndex].time_slots.splice(slotIndex, 1);\n    },\n    showModal: function showModal() {\n      var modal = new bootstrap.Modal(document.getElementById('scheduleModal'));\n      modal.show();\n    },\n    fixSlots: function fixSlots(dayIndex) {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var selectedDay, incompleteSlots, invalidTimes, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              selectedDay = _this.schedule[dayIndex]; // Verificar si es lunes\n              if (!(selectedDay.day_of_week === 'Monday')) {\n                _context.next = 4;\n                break;\n              }\n              _this.showModal();\n              return _context.abrupt(\"return\");\n            case 4:\n              // Aquí iría la lógica para los otros días que no sean lunes...\n              // Verificación de franjas horarias incompletas\n              incompleteSlots = selectedDay.time_slots.some(function (slot) {\n                return !slot.start_time || !slot.end_time;\n              });\n              if (!incompleteSlots) {\n                _context.next = 8;\n                break;\n              }\n              _this.toast.error('Por favor completa todas las franjas horarias antes de fijarlas.');\n              return _context.abrupt(\"return\");\n            case 8:\n              // Verificación de horas inválidas\n              invalidTimes = selectedDay.time_slots.some(function (slot) {\n                return slot.start_time >= slot.end_time;\n              });\n              if (!invalidTimes) {\n                _context.next = 12;\n                break;\n              }\n              _this.toast.error('La hora de inicio debe ser antes que la hora de fin.');\n              return _context.abrupt(\"return\");\n            case 12:\n              _context.prev = 12;\n              _context.next = 15;\n              return fetch(\"http://127.0.0.1:8000/api/business/schedule/\".concat(_this.busiId), {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                  'Authorization': \"Bearer \".concat(token)\n                },\n                body: JSON.stringify({\n                  schedule: [{\n                    day_of_week: selectedDay.day_of_week,\n                    time_slots: selectedDay.time_slots\n                  }]\n                })\n              });\n            case 15:\n              response = _context.sent;\n              if (response.ok) {\n                _context.next = 18;\n                break;\n              }\n              throw new Error('Error al registrar las franjas horarias');\n            case 18:\n              _this.toast.success('Franjas horarias registradas correctamente.');\n              _context.next = 24;\n              break;\n            case 21:\n              _context.prev = 21;\n              _context.t0 = _context[\"catch\"](12);\n              _this.toast.error('Hubo un error al registrar las franjas horarias.');\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[12, 21]]);\n      }))();\n    },\n    applyScheduleToSelectedDays: function applyScheduleToSelectedDays() {\n      var _this2 = this;\n      var mondaySlots = this.schedule.find(function (day) {\n        return day.day_of_week === 'Monday';\n      }).time_slots;\n      this.selectedDays.forEach(function (day) {\n        var daySchedule = _this2.schedule.find(function (d) {\n          return d.day_of_week === day;\n        });\n        if (daySchedule) {\n          daySchedule.time_slots = _toConsumableArray(mondaySlots);\n        }\n      });\n      var modal = bootstrap.Modal.getInstance(document.getElementById('scheduleModal'));\n      modal.hide();\n      this.toast.success('Horarios aplicados correctamente a los días seleccionados.');\n    }\n  }\n};","map":{"version":3,"names":["useToast","data","days","selectedDays","busiId","$route","params","id","schedule","day_of_week","time_slots","start_time","end_time","setup","toast","methods","addSlot","index","push","removeSlot","dayIndex","slotIndex","splice","showModal","modal","bootstrap","Modal","document","getElementById","show","fixSlots","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","selectedDay","incompleteSlots","invalidTimes","response","wrap","_callee$","_context","prev","next","abrupt","some","slot","error","fetch","concat","method","headers","token","body","JSON","stringify","sent","ok","Error","success","t0","stop","applyScheduleToSelectedDays","_this2","mondaySlots","find","day","forEach","daySchedule","d","_toConsumableArray","getInstance","hide"],"sources":["C:\\YARELI\\New\\VUE\\DogToralia\\src\\pages\\admin\\horarios\\regisHorario.vue"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <div class=\"container mt-5\">\r\n      <h1 class=\"text-center\">Registrar Horario para Negocio {{ busiId }}</h1>\r\n\r\n      <form>\r\n        <div v-for=\"(day, index) in schedule\" :key=\"index\" class=\"mb-4\">\r\n          <h4>{{ day.day_of_week }}</h4>\r\n\r\n          <div class=\"d-flex justify-content-end\">\r\n            <button class=\"btn btn-info mt-2\" @click.prevent=\"addSlot(index)\">Añadir Franja Horaria</button>\r\n          </div>\r\n\r\n          <div v-for=\"(slot, idx) in day.time_slots\" :key=\"idx\" class=\"row mb-2\">\r\n            <div class=\"col-sm-6 col-md-3\">\r\n              <label>Apertura</label>\r\n              <input type=\"time\" v-model=\"slot.start_time\" class=\"form-control\" required />\r\n            </div>\r\n            <div class=\"col-sm-6 col-md-3\">\r\n              <label>Cierre</label>\r\n              <input type=\"time\" v-model=\"slot.end_time\" class=\"form-control\" required />\r\n            </div>\r\n            <div class=\"col-2 d-flex align-items-end\">\r\n              <span @click=\"removeSlot(index, idx)\">\r\n                <i class=\"icofont icofont-close-circled font-danger fs-4\"></i>\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Botón para fijar todas las franjas horarias del día -->\r\n          <div class=\"d-flex justify-content mt-2\">\r\n            <button @click.prevent=\"fixSlots(index)\" class=\"btn btn-primary\">Fijar Horarios</button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <!-- Modal -->\r\n  <div class=\"modal fade\" id=\"scheduleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\">¿Deseas guardar el mismo horario para los demás días?</h5>\r\n          <button class=\"btn-close\" type=\"button\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p>Seleccionaste el lunes. ¿Quieres aplicar el mismo horario para otros días?</p>\r\n          <!-- Selección de días -->\r\n          <div>\r\n            <label v-for=\"(day, index) in days\" :key=\"index\">\r\n              <input type=\"checkbox\" :value=\"day\" v-model=\"selectedDays\">\r\n              {{ day }}\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button class=\"btn btn-primary\" @click.prevent=\"applyScheduleToSelectedDays\" type=\"button\">Sí</button>\r\n          <button class=\"btn btn-secondary\" type=\"button\" data-bs-dismiss=\"modal\">No</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { useToast } from 'vue-toastification';\r\nimport 'bootstrap/dist/js/bootstrap.bundle';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      days: [\"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n      selectedDays: [],\r\n      busiId: this.$route.params.id,\r\n      schedule: [\r\n        { day_of_week: 'Monday', time_slots: [{ start_time: '', end_time: '' }] },\r\n        { day_of_week: 'Tuesday', time_slots: [{ start_time: '', end_time: '' }] },\r\n        { day_of_week: 'Wednesday', time_slots: [{ start_time: '', end_time: '' }] },\r\n        { day_of_week: 'Thursday', time_slots: [{ start_time: '', end_time: '' }] },\r\n        { day_of_week: 'Friday', time_slots: [{ start_time: '', end_time: '' }] },\r\n        { day_of_week: 'Saturday', time_slots: [{ start_time: '', end_time: '' }] },\r\n        { day_of_week: 'Sunday', time_slots: [{ start_time: '', end_time: '' }] }\r\n      ]\r\n    };\r\n  },\r\n  setup() {\r\n    const toast = useToast();\r\n    return { toast };\r\n  },\r\n  methods: {\r\n    addSlot(index) {\r\n      this.schedule[index].time_slots.push({ start_time: '', end_time: '' });\r\n    },\r\n\r\n    removeSlot(dayIndex, slotIndex) {\r\n      this.schedule[dayIndex].time_slots.splice(slotIndex, 1);\r\n    },\r\n\r\n    showModal() {\r\n      const modal = new bootstrap.Modal(document.getElementById('scheduleModal'));\r\n      modal.show();\r\n    },\r\n\r\n    async fixSlots(dayIndex) {\r\n      const selectedDay = this.schedule[dayIndex];\r\n\r\n      // Verificar si es lunes\r\n      if (selectedDay.day_of_week === 'Monday') {\r\n        this.showModal();\r\n        return; // Evitar continuar hasta que el usuario decida\r\n      }\r\n\r\n      // Aquí iría la lógica para los otros días que no sean lunes...\r\n\r\n      // Verificación de franjas horarias incompletas\r\n      const incompleteSlots = selectedDay.time_slots.some(slot => !slot.start_time || !slot.end_time);\r\n      if (incompleteSlots) {\r\n        this.toast.error('Por favor completa todas las franjas horarias antes de fijarlas.');\r\n        return;\r\n      }\r\n\r\n      // Verificación de horas inválidas\r\n      const invalidTimes = selectedDay.time_slots.some(slot => slot.start_time >= slot.end_time);\r\n      if (invalidTimes) {\r\n        this.toast.error('La hora de inicio debe ser antes que la hora de fin.');\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`http://127.0.0.1:8000/api/business/schedule/${this.busiId}`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${token}`\r\n          },\r\n          body: JSON.stringify({\r\n            schedule: [\r\n              {\r\n                day_of_week: selectedDay.day_of_week,\r\n                time_slots: selectedDay.time_slots\r\n              }\r\n            ]\r\n          })\r\n        });\r\n\r\n        if (!response.ok) throw new Error('Error al registrar las franjas horarias');\r\n\r\n        this.toast.success('Franjas horarias registradas correctamente.');\r\n      } catch (error) {\r\n        this.toast.error('Hubo un error al registrar las franjas horarias.');\r\n      }\r\n    },\r\n\r\n    applyScheduleToSelectedDays() {\r\n      const mondaySlots = this.schedule.find(day => day.day_of_week === 'Monday').time_slots;\r\n\r\n      this.selectedDays.forEach(day => {\r\n        const daySchedule = this.schedule.find(d => d.day_of_week === day);\r\n        if (daySchedule) {\r\n          daySchedule.time_slots = [...mondaySlots];\r\n        }\r\n      });\r\n\r\n      const modal = bootstrap.Modal.getInstance(document.getElementById('scheduleModal'));\r\n      modal.hide();\r\n\r\n      this.toast.success('Horarios aplicados correctamente a los días seleccionados.');\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}