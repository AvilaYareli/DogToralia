{"ast":null,"code":"import _regeneratorRuntime from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport axios from 'axios';\nimport { useToast } from 'vue-toastification';\nexport default {\n  data: function data() {\n    return {\n      type: 'password',\n      nombre: '',\n      apellido: '',\n      telefono: '',\n      correo: '',\n      password: '',\n      passwordConfirmar: '',\n      errorMessage: '',\n      okMessage: '',\n      persoId: this.$route.params.id\n    };\n  },\n  watch: {\n    '$route.params.id': function $routeParamsId(newId) {\n      this.persoId = newId;\n      this.verDetalles();\n    }\n  },\n  methods: {\n    showPassword: function showPassword() {\n      this.type = this.type === 'password' ? 'text' : 'password';\n    },\n    filterNumbers: function filterNumbers(event) {\n      this.errorMessage = '';\n      var onlyNumbers = event.target.value.replace(/\\D/g, '');\n      this.telefono = onlyNumbers;\n    },\n    filterName: function filterName(event) {\n      this.errorMessage = '';\n      var onlylettters = event.target.value.replace(/[^a-zA-Z]/g, '');\n      this.nombre = onlylettters;\n    },\n    filterApe: function filterApe(event) {\n      this.errorMessage = '';\n      var onlylettters = event.target.value.replace(/[^a-zA-Z]/g, '');\n      this.apellido = onlylettters;\n    },\n    limpiarError: function limpiarError() {\n      this.errorMessage = '';\n    },\n    validarCorreo: function validarCorreo(correo) {\n      var regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return regex.test(correo);\n    },\n    validarCampos: function validarCampos(_ref) {\n      var nombre = _ref.nombre,\n        apellido = _ref.apellido,\n        correo = _ref.correo,\n        password = _ref.password,\n        passwordConfirmar = _ref.passwordConfirmar,\n        telefono = _ref.telefono;\n      if (!nombre || !apellido || !correo || !password || !passwordConfirmar || !telefono) {\n        return 'Todos los campos son obligatorios.';\n      }\n      if (!this.validarCorreo(correo)) {\n        return 'Correo electrónico no válido. Debe tener un formato como nombre@dominio.com';\n      }\n      if (password !== passwordConfirmar) {\n        return 'Las contraseñas no coinciden.';\n      }\n      if (password.length < 8) {\n        return 'La contraseña debe tener al menos 8 caracteres.';\n      }\n      if (telefono.length !== 10) {\n        return 'Revisa tu número de teléfono';\n      }\n      return '';\n    },\n    RegisPersonal: function RegisPersonal() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var toast, error, formData, response, resultado;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              toast = useToast();\n              _context.prev = 1;\n              error = _this.validarCampos({\n                nombre: _this.nombre,\n                apellido: _this.apellido,\n                correo: _this.correo,\n                password: _this.password,\n                passwordConfirmar: _this.passwordConfirmar,\n                telefono: _this.telefono\n              });\n              if (!error) {\n                _context.next = 8;\n                break;\n              }\n              _this.errorMessage = error;\n              toast.warning(error);\n              _context.next = 14;\n              break;\n            case 8:\n              formData = {\n                name: _this.nombre,\n                last_name: _this.apellido,\n                email: _this.correo,\n                password: _this.password,\n                password_confirmation: _this.passwordConfirmar,\n                phone_number: _this.telefono.toString()\n              };\n              _context.next = 11;\n              return axios.post(\"https://devs-devitm.com/api/staff/register\".concat(_this.persoId), formData);\n            case 11:\n              response = _context.sent;\n              resultado = response.data;\n              if (resultado.status === 'error') {\n                _this.errorMessage = resultado.message;\n                toast.error(resultado.message);\n              } else {\n                _this.okMessage = \"Usuario registrado correctamente\";\n                toast.success('Usuario registrado correctamente.');\n                localStorage.setItem('token', resultado.authorization.token);\n                localStorage.setItem('userType', 'staff');\n                _this.userType = 'staff';\n                _this.nombre = '';\n                _this.apellido = '';\n                _this.telefono = '';\n                _this.correo = '';\n                _this.password = '';\n                _this.passwordConfirmar = '';\n              }\n            case 14:\n              _context.next = 21;\n              break;\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](1);\n              console.log('error', _context.t0);\n              _this.errorMessage = 'Hubo un error en el registro';\n              toast.error('Hubo un error en el registro.');\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 16]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["axios","useToast","data","type","nombre","apellido","telefono","correo","password","passwordConfirmar","errorMessage","okMessage","persoId","$route","params","id","watch","$routeParamsId","newId","verDetalles","methods","showPassword","filterNumbers","event","onlyNumbers","target","value","replace","filterName","onlylettters","filterApe","limpiarError","validarCorreo","regex","test","validarCampos","_ref","length","RegisPersonal","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","toast","error","formData","response","resultado","wrap","_callee$","_context","prev","next","warning","name","last_name","email","password_confirmation","phone_number","toString","post","concat","sent","status","message","success","localStorage","setItem","authorization","token","userType","t0","console","log","stop"],"sources":["C:\\YARELI\\New\\VUE\\DogToralia\\src\\pages\\admin\\nuevoPersonal.vue"],"sourcesContent":["<template>\r\n  <div class=\"col-xl-8 col-lg-7\">\r\n    <form class=\"card\" @submit.prevent=\"RegisPersonal\">\r\n      <div class=\"card-header pb-0\">\r\n        <h4 class=\"card-title mb-0\">Registrar un nuevo miembro del personal{{persoId }}</h4>\r\n        <div class=\"card-options\">\r\n          <a class=\"card-options-collapse\" href=\"#\" data-bs-toggle=\"card-collapse\"><i class=\"fe fe-chevron-up\"></i></a>\r\n          <a class=\"card-options-remove\" href=\"#\" data-bs-toggle=\"card-remove\"><i class=\"fe fe-x\"></i></a>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label f-w-500\">Nombre</label>\r\n              <input v-model=\"nombre\" class=\"form-control\" @input=\"filterName\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-6\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label f-w-500\">Apellido</label>\r\n              <input v-model=\"apellido\" class=\"form-control\" @input=\"filterApe\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-6\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label f-w-500\">Telefono</label>\r\n              <input v-model=\"telefono\" class=\"form-control\" @input=\"filterNumbers\" maxlength=\"10\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-6\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label f-w-500\">Correo electrónico</label>\r\n              <input v-model=\"correo\" @input=\"limpiarError\" class=\"form-control\" type=\"text\" placeholder=\"correo@gmail.com\">\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label class=\"col-form-label\">Password</label>\r\n            <div class=\"form-input position-relative\">\r\n              <input v-model=\"password\" @input=\"limpiarError\" :type=\"type\" class=\"form-control\" name=\"login[password]\"\r\n                placeholder=\"*********\">\r\n              <div class=\"show-hide\"><span class=\"show\" @click=\"showPassword\"> </span></div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <label class=\"col-form-label\">Confirmar Password</label>\r\n            <div class=\"form-input position-relative\">\r\n              <input v-model=\"passwordConfirmar\" @input=\"limpiarError\" :type=\"type\" class=\"form-control\" name=\"login[password]\"\r\n                placeholder=\"*********\">\r\n              <div class=\"show-hide\"><span class=\"show\" @click=\"showPassword\"> </span></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"card-footer text-end\">\r\n        <button class=\"btn btn-primary\" type=\"submit\">Registrar Personal</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { useToast } from 'vue-toastification';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      type: 'password',\r\n      nombre: '',\r\n      apellido: '',\r\n      telefono: '',\r\n      correo: '',\r\n      password: '',\r\n      passwordConfirmar: '',\r\n      errorMessage: '',\r\n      okMessage: '',\r\n      persoId: this.$route.params.id,\r\n    };\r\n  },\r\n  watch: {\r\n    '$route.params.id': function(newId) {\r\n      this.persoId = newId;\r\n      this.verDetalles();\r\n    }\r\n  },\r\n  methods: {\r\n    showPassword() {\r\n      this.type = this.type === 'password' ? 'text' : 'password';\r\n    },\r\n    filterNumbers(event) {\r\n      this.errorMessage = '';\r\n      const onlyNumbers = event.target.value.replace(/\\D/g, '');\r\n      this.telefono = onlyNumbers;\r\n    },\r\n    filterName(event) {\r\n      this.errorMessage = '';\r\n      const onlylettters = event.target.value.replace(/[^a-zA-Z]/g, '');\r\n      this.nombre = onlylettters;\r\n    },\r\n    filterApe(event) {\r\n      this.errorMessage = '';\r\n      const onlylettters = event.target.value.replace(/[^a-zA-Z]/g, '');\r\n      this.apellido = onlylettters;\r\n    },\r\n    limpiarError() {\r\n      this.errorMessage = '';\r\n    },\r\n    validarCorreo(correo) {\r\n      const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n      return regex.test(correo);\r\n    },\r\n    validarCampos({ nombre, apellido, correo, password, passwordConfirmar, telefono }) {\r\n      if (!nombre || !apellido || !correo || !password || !passwordConfirmar || !telefono) {\r\n        return 'Todos los campos son obligatorios.';\r\n      }\r\n      if (!this.validarCorreo(correo)) {\r\n        return 'Correo electrónico no válido. Debe tener un formato como nombre@dominio.com';\r\n      }\r\n      if (password !== passwordConfirmar) {\r\n        return 'Las contraseñas no coinciden.';\r\n      }\r\n      if (password.length < 8) {\r\n        return 'La contraseña debe tener al menos 8 caracteres.';\r\n      }\r\n      if (telefono.length !== 10) {\r\n        return 'Revisa tu número de teléfono';\r\n      }\r\n      return '';\r\n    },\r\n    async RegisPersonal() {\r\n      const toast = useToast();\r\n      try {\r\n        const error = this.validarCampos({\r\n          nombre: this.nombre,\r\n          apellido: this.apellido,\r\n          correo: this.correo,\r\n          password: this.password,\r\n          passwordConfirmar: this.passwordConfirmar,\r\n          telefono: this.telefono\r\n        });\r\n\r\n        if (error) {\r\n          this.errorMessage = error;\r\n          toast.warning(error); \r\n        } else {\r\n          const formData = {\r\n            name: this.nombre,\r\n            last_name: this.apellido,\r\n            email: this.correo,\r\n            password: this.password,\r\n            password_confirmation: this.passwordConfirmar,\r\n            phone_number: this.telefono.toString()\r\n          };\r\n\r\n          const response = await axios.post(`https://devs-devitm.com/api/staff/register${this.persoId}`, formData);\r\n          const resultado = response.data;\r\n\r\n          if (resultado.status === 'error') {\r\n            this.errorMessage = resultado.message;\r\n            toast.error(resultado.message);\r\n          } else {\r\n            this.okMessage = \"Usuario registrado correctamente\";\r\n            toast.success('Usuario registrado correctamente.');\r\n            localStorage.setItem('token', resultado.authorization.token);\r\n            localStorage.setItem('userType', 'staff');\r\n            this.userType = 'staff';\r\n            this.nombre = '';\r\n            this.apellido = '';\r\n            this.telefono = '';\r\n            this.correo = '';\r\n            this.password = '';\r\n            this.passwordConfirmar = '';\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.log('error', error);\r\n        this.errorMessage = 'Hubo un error en el registro';\r\n        toast.error('Hubo un error en el registro.');\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n  \r\n  <style >\r\n  \r\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}