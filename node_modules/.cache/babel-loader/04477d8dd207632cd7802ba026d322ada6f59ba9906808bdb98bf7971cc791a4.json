{"ast":null,"code":"import _regeneratorRuntime from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { ref } from 'vue';\nimport { useToast } from 'vue-toastification';\nexport default {\n  data: function data() {\n    return {\n      nombre: '',\n      duracion: '',\n      categoria: '',\n      descripcion: '',\n      precio: '',\n      currency: '',\n      errorMessage: '',\n      okMessage: '',\n      busiId: this.$route.params.id,\n      type: 'password'\n    };\n  },\n  setup: function setup() {\n    var toast = useToast();\n    return {\n      toast: toast\n    };\n  },\n  watch: {\n    '$route.params.id': function $routeParamsId(newId) {\n      this.busiId = newId;\n    }\n  },\n  methods: {\n    // ...mapActions(['refreshToken']),\n    limpiarError: function limpiarError() {\n      this.errorMessage = '';\n    },\n    filterName: function filterName(event) {\n      var onlyLettersAndSpaces = event.target.value.replace(/[^a-zA-Z\\s]/g, '');\n      this.nombre = onlyLettersAndSpaces;\n      this.errorMessage = '';\n    },\n    validarCampos: function validarCampos(_ref) {\n      var nombre = _ref.nombre,\n        duracion = _ref.duracion,\n        categoria = _ref.categoria,\n        descripcion = _ref.descripcion,\n        precio = _ref.precio,\n        currency = _ref.currency;\n      if (!nombre || !currency || !duracion || !categoria || !descripcion || !precio) {\n        return 'Todos los campos son obligatorios.';\n      }\n      return '';\n    },\n    Nuevo: function Nuevo() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var toast, token, myHeaders, raw, requestOptions, response, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              toast = useToast();\n              _context.prev = 1;\n              token = localStorage.getItem('token'); // const newToken = await this.refreshToken();\n              // const token = newToken || localStorage.getItem('token');\n              myHeaders = new Headers();\n              myHeaders.append(\"Content-Type\", \"application/json\");\n              myHeaders.append(\"Authorization\", \"Bearer \".concat(token));\n              raw = JSON.stringify({\n                'name': _this.nombre,\n                'duration': _this.duracion,\n                'category': _this.categoria,\n                'description': _this.descripcion,\n                'price': _this.precio,\n                'currency': _this.currency\n              });\n              requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n                redirect: \"follow\"\n              };\n              _context.next = 10;\n              return fetch(\"http://127.0.0.1:8000/api/services/\".concat(_this.busiId), requestOptions);\n            case 10:\n              response = _context.sent;\n              _context.next = 13;\n              return response.json();\n            case 13:\n              result = _context.sent;\n              if (result.status === \"error\") {\n                toast.error(\"\".concat(result.message, \": \").concat(result.error));\n              } else {\n                toast.success('Servicio registrado correctamente.');\n                _this.dataserv = {\n                  nombre: '',\n                  duracion: '',\n                  categoria: '',\n                  descripcion: '',\n                  precio: '',\n                  currency: ''\n                };\n              }\n              _context.next = 21;\n              break;\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](1);\n              toast.error('Error al registrar el servicio.');\n              console.error(_context.t0);\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[1, 17]]);\n      }))();\n    } // async Nuevo() {\n    //   const token = localStorage.getItem('token');\n    //         // const newToken = await this.refreshToken();\n    //         // const token = newToken || localStorage.getItem('token');\n    //   if (!token) {\n    //     this.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\n    //     this.$router.push('/auth/login');\n    //     return;\n    //   }\n    //   try { \n    //     const error = this.validarCampos({\n    //       nombre: this.nombre,\n    //       duracion: this.duracion,\n    //       categoria: this.categoria,\n    //       descripcion: this.descripcion,\n    //       precio: this.precio,\n    //       currency: this.currency,\n    //     });\n    //     if (error) {\n    //       this.toast.warning(error);\n    //       return;\n    //     }\n    //     const formData = new FormData();\n    //     formData.append('name', this.nombre);\n    //     formData.append('duration', this.duracion); \n    //     formData.append('category', this.categoria);\n    //     formData.append('description', this.descripcion);\n    //     formData.append('price', this.precio);\n    //     formData.append('currency', this.currency);\n    //     const response = await fetch(`http://127.0.0.1:8000/api/staff/register/${this.busiId}`, {\n    //       method: 'POST',\n    //       headers: {\n    //         'Authorization': `Bearer ${token}`\n    //       },\n    //       body: formData\n    //     });\n    //     const result = await response.json();\n    //     if (result.status === \"success\") {\n    //       this.okMessage = \"Nuevo miembro del personal registrado correctamente.\";\n    //       this.toast.success('Miembro del personal registrado correctamente.');\n    //       this.nombre = '';\n    //       this.apellido = '';\n    //       this.correo = '';\n    //       this.password = '';\n    //       this.passwordConfirmar = '';\n    //       this.telefono = '';\n    //     } else {\n    //       this.errorMessage = result.message || 'Hubo un error en el registro.';\n    //       this.toast.error(this.errorMessage);\n    //     }\n    //   } catch (error) {\n    //     console.error('Error en el registro', error);\n    //     this.errorMessage = 'Hubo un problema al registrar la nueva mascota';\n    //     this.toast.error('Hubo un error en el registro.');\n    //   }\n    // },\n  }\n};","map":{"version":3,"names":["ref","useToast","data","nombre","duracion","categoria","descripcion","precio","currency","errorMessage","okMessage","busiId","$route","params","id","type","setup","toast","watch","$routeParamsId","newId","methods","limpiarError","filterName","event","onlyLettersAndSpaces","target","value","replace","validarCampos","_ref","Nuevo","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","token","myHeaders","raw","requestOptions","response","result","wrap","_callee$","_context","prev","next","localStorage","getItem","Headers","append","concat","JSON","stringify","method","headers","body","redirect","fetch","sent","json","status","error","message","success","dataserv","t0","console","stop"],"sources":["C:\\YARELI\\New\\VUE\\DogToralia\\src\\pages\\admin\\servicio\\nuevoServicio.vue"],"sourcesContent":["<template>\r\n  <breadcrumbs title=\"Nuevo Servicio\" main=\"Servicios\" mainPath=\"/menu-Negocio\" />\r\n\r\n  <div class=\"card\">\r\n    <form class=\"card\" @submit.prevent=\"Nuevo\">\r\n      <div class=\"card-header pb-0\">\r\n        <h4 class=\"card-title mb-0\">Registrar Nuevo Servicio{{ busiId}}</h4>\r\n      </div>\r\n      <div class=\"card-body\"> \r\n        <div class=\"row align-items-center\">\r\n             <!-- Nombre -->\r\n          <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label f-w-500\">Nombre del servicio</label>\r\n              <input v-model=\"nombre\" class=\"form-control\" @input=\"filterName\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label f-w-500\">Duración</label>\r\n              <input v-model=\"duracion\" @input=\"limpiarError\"  class=\"form-control\" >\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"mb-3\">\r\n                <label class=\"form-label\">Categoria</label>\r\n                <select v-model=\"categoria\"class=\"form-select\"> \r\n                    <option></option>\r\n                    <option>Estetica</option>\r\n                    <option>Veterinaria</option>\r\n                    <option>Estetica Veterianeria</option>\r\n                </select>                          \r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n              <div class=\"mb-3\">\r\n                <label class=\"form-label f-w-500\">Descripción:</label>\r\n                <textarea v-model=\"descripcion\" @input=\"limpiarError\" class=\"form-control\" rows=\"5\" placeholder=\"Agrega la descripción del servicio\"></textarea>\r\n              </div>\r\n            </div>\r\n            <!-- precio -->\r\n          <div class=\"col-sm-6 col-md-3\">\r\n            <div class=\"mb-3\">\r\n              <label class=\"form-label f-w-500\">Precio</label>\r\n              <input v-model=\"precio\"  type=\"number\" class=\"form-control\" @input=\"filterApe\">\r\n            </div>\r\n          </div>\r\n          <div class=\"col-sm-6 col-md-4\">\r\n                <div class=\"mb-3\">\r\n                  <div class=\"d-flex\">\r\n                    <div class=\"form-check form-check-inline radio radio-primary\">\r\n                      <input class=\"form-check-input\" id=\"radioinline1\" type=\"radio\" name=\"genero\" value=\"USD\" v-model=\"currency\">\r\n                      <label class=\"form-check-label mb-0\" for=\"radioinline1\">USD</label>\r\n                    </div>\r\n                    <div class=\"form-check form-check-inline radio radio-primary\">\r\n                      <input class=\"form-check-input\" id=\"radioinline2\" type=\"radio\" name=\"genero\" value=\"MXN\" v-model=\"currency\">\r\n                      <label class=\"form-check-label mb-0\" for=\"radioinline2\">MXN</label>\r\n                    </div>\r\n                  </div> \r\n                </div>\r\n              </div>\r\n                 <!--  --> \r\n        </div>\r\n      </div>\r\n      <div class=\"card-footer d-flex justify-content-end\">\r\n        <button class=\"btn btn-secondary\" type=\"submit\">Registrar</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n<!-- jjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjjj -->\r\n\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport { useToast } from 'vue-toastification';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      nombre: '',      \r\n      duracion: '',\r\n      categoria: '',\r\n      descripcion: '',\r\n      precio: '',\r\n      currency: '',\r\n      errorMessage: '',\r\n      okMessage: '',\r\n      busiId: this.$route.params.id,\r\n      type: 'password',\r\n    };\r\n  },\r\n  setup() {\r\n    const toast = useToast();\r\n    return { toast }; \r\n  },\r\n  watch: {\r\n    '$route.params.id': function(newId) {\r\n      this.busiId = newId;\r\n    }\r\n  },\r\n  methods: {\r\n    // ...mapActions(['refreshToken']),\r\n\r\n    limpiarError() {\r\n      this.errorMessage = '';\r\n    },\r\n    filterName(event) {\r\n      const onlyLettersAndSpaces = event.target.value.replace(/[^a-zA-Z\\s]/g, '');\r\n      this.nombre = onlyLettersAndSpaces;\r\n      this.errorMessage = '';\r\n    },\r\n    validarCampos({ nombre, duracion, categoria, descripcion, precio, currency }) {\r\n      if (!nombre || !currency || !duracion || !categoria || !descripcion || ! precio) {\r\n        return 'Todos los campos son obligatorios.';\r\n      }\r\n     \r\n      return '';\r\n    },\r\n    async Nuevo(){\r\n          const toast = useToast();\r\n          try {\r\n            const token = localStorage.getItem('token');\r\n            // const newToken = await this.refreshToken();\r\n            // const token = newToken || localStorage.getItem('token');\r\n            const myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            myHeaders.append(\"Authorization\", `Bearer ${token}`);\r\n    \r\n            const raw = JSON.stringify({\r\n              'name': this.nombre,\r\n              'duration': this.duracion ,\r\n              'category': this.categoria,\r\n              'description': this.descripcion,\r\n              'price':this.precio,\r\n              'currency':this.currency,\r\n            });\r\n    \r\n            const requestOptions = {\r\n              method: 'POST',\r\n              headers: myHeaders,\r\n              body: raw,\r\n              redirect: \"follow\"\r\n            };\r\n    \r\n            const response = await fetch(`http://127.0.0.1:8000/api/services/${this.busiId}`, requestOptions);\r\n            const result = await response.json();\r\n    \r\n            if (result.status === \"error\") {\r\n              toast.error(`${result.message}: ${result.error}`);\r\n            } else {\r\n              toast.success('Servicio registrado correctamente.');\r\n              this.dataserv = {\r\n                nombre: '',\r\n                duracion: '',\r\n                categoria: '',\r\n                descripcion: '',\r\n                precio: '',\r\n                currency: ''\r\n              };\r\n              \r\n            }\r\n          } catch (err) {\r\n            toast.error('Error al registrar el servicio.');\r\n            console.error(err);\r\n          }\r\n        }\r\n    // async Nuevo() {\r\n    //   const token = localStorage.getItem('token');\r\n    //         // const newToken = await this.refreshToken();\r\n    //         // const token = newToken || localStorage.getItem('token');\r\n    //   if (!token) {\r\n    //     this.errorMessage = 'No se encontró ningún token, redireccionando para iniciar sesión';\r\n    //     this.$router.push('/auth/login');\r\n    //     return;\r\n    //   }\r\n\r\n    //   try { \r\n    //     const error = this.validarCampos({\r\n    //       nombre: this.nombre,\r\n    //       duracion: this.duracion,\r\n    //       categoria: this.categoria,\r\n    //       descripcion: this.descripcion,\r\n    //       precio: this.precio,\r\n    //       currency: this.currency,\r\n          \r\n    //     });\r\n\r\n    //     if (error) {\r\n    //       this.toast.warning(error);\r\n    //       return;\r\n    //     }\r\n\r\n    //     const formData = new FormData();\r\n    //     formData.append('name', this.nombre);\r\n    //     formData.append('duration', this.duracion); \r\n    //     formData.append('category', this.categoria);\r\n    //     formData.append('description', this.descripcion);\r\n    //     formData.append('price', this.precio);\r\n    //     formData.append('currency', this.currency);\r\n\r\n    //     const response = await fetch(`http://127.0.0.1:8000/api/staff/register/${this.busiId}`, {\r\n    //       method: 'POST',\r\n    //       headers: {\r\n    //         'Authorization': `Bearer ${token}`\r\n    //       },\r\n    //       body: formData\r\n    //     });\r\n\r\n    //     const result = await response.json();\r\n    //     if (result.status === \"success\") {\r\n    //       this.okMessage = \"Nuevo miembro del personal registrado correctamente.\";\r\n    //       this.toast.success('Miembro del personal registrado correctamente.');\r\n    //       this.nombre = '';\r\n    //       this.apellido = '';\r\n    //       this.correo = '';\r\n    //       this.password = '';\r\n    //       this.passwordConfirmar = '';\r\n    //       this.telefono = '';\r\n    //     } else {\r\n    //       this.errorMessage = result.message || 'Hubo un error en el registro.';\r\n    //       this.toast.error(this.errorMessage);\r\n    //     }\r\n    //   } catch (error) {\r\n    //     console.error('Error en el registro', error);\r\n    //     this.errorMessage = 'Hubo un problema al registrar la nueva mascota';\r\n    //     this.toast.error('Hubo un error en el registro.');\r\n    //   }\r\n    // },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.profile-photo {\r\n  width: 150px; \r\n  height: 150px; \r\n  object-fit: cover; \r\n  border-radius: 0; \r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}