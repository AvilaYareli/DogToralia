{"ast":null,"code":"import _regeneratorRuntime from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/YARELI/New/VUE/DogToralia/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-json.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nexport default {\n  data: function data() {\n    return {\n      type: 'password',\n      nombreb: '',\n      apellidob: '',\n      telefonob: '',\n      correob: '',\n      passwordb: '',\n      passwordConfirmarb: '',\n      errorMessage: '',\n      okMessage: ''\n    };\n  },\n  methods: {\n    showPassword: function showPassword() {\n      this.type = this.type === 'password' ? 'text' : 'password';\n    },\n    registrarCuenta: function registrarCuenta() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var myHeaders, raw, requestOptions;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                myHeaders = new Headers();\n                myHeaders.append(\"Content-Type\", \"application/json\");\n                console.log('nombre::', _this.nombre);\n                raw = JSON.stringify({\n                  \"name\": _this.nombre,\n                  \"last_name\": _this.apellido,\n                  \"email\": _this.correo,\n                  \"password\": _this.password,\n                  \"password_confirmation\": _this.passwordConfirmar,\n                  \"phone_number\": _this.telefono.toString()\n                });\n                requestOptions = {\n                  method: 'POST',\n                  headers: myHeaders,\n                  body: raw,\n                  redirect: 'follow'\n                };\n                fetch(\"https://devs-devitm.com/api/pet_owner/register\", requestOptions).then(function (response) {\n                  return response.text();\n                }).then(function (result) {\n                  _this.errorMessage = '';\n                  var resultado = JSON.parse(result);\n                  console.log(\"resultado:\", resultado);\n                  if (resultado.status === 'error') {\n                    _this.errorMessage = resultado.message;\n                  } else {\n                    _this.okMessage = \"Usuario creado correctamente.Por favor, inicie sesión\";\n                    _this.nombre = '';\n                    _this.apellido = '';\n                    _this.telefono = '';\n                    _this.correo = '';\n                    _this.password = '';\n                    _this.passwordConfirmar = '';\n                  }\n                })[\"catch\"](function (error) {\n                  return console.log('error', error);\n                });\n              } catch (error) {}\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["data","type","nombreb","apellidob","telefonob","correob","passwordb","passwordConfirmarb","errorMessage","okMessage","methods","showPassword","registrarCuenta","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","myHeaders","raw","requestOptions","wrap","_callee$","_context","prev","next","Headers","append","console","log","nombre","JSON","stringify","apellido","correo","password","passwordConfirmar","telefono","toString","method","headers","body","redirect","fetch","then","response","text","result","resultado","parse","status","message","error","stop"],"sources":["C:\\YARELI\\New\\VUE\\DogToralia\\src\\components\\registerBusi.vue"],"sourcesContent":["<template>\r\n  <div class=\"container-fluid p-0\"> \r\n    <div class=\"row m-0\">\r\n      <div class=\"col-12 p-0\">    \r\n        <div class=\"login-card\">\r\n          <div>\r\n            <div><a class=\"logo text-center\" ><router-link to=\"/\"> <img class=\"img-fluid for-light\" src=\"@/assets/images/logo/logo2.png\" alt=\"looginpage\"></router-link></a></div>\r\n            \r\n            <div class=\"login-main\"> \r\n              <form class=\"theme-form\" @submit.prevent=\"\">\r\n                <h4 class=\"text-center\">Registra tu negocio</h4>\r\n                <p class=\"text-center\">Ingrese sus datos personales para crear una cuenta</p>\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-form-label pt-0\">Nombre</label>                   \r\n                      <input v-model=\"nombreb\" class=\"form-control\"> \r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-form-label pt-0\">Apellido</label>                     \r\n                      <input v-model=\"apellidob\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-form-label\">Correo electrónico</label>\r\n                  <input  v-model=\"correob\" class=\"form-control\" type=\"email\"  placeholder=\"Test@gmail.com\">\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-form-label pt-0\">Telefono</label>                     \r\n                      <input v-model=\"telefonob\" class=\"form-control\" >\r\n                </div>\r\n               <div class=\"form-group\">\r\n                  <label class=\"col-form-label pt-0\">Apellido</label>                     \r\n                      <input v-model=\"rfcb\" class=\"form-control\">\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-form-label\">Password</label>\r\n                  <div class=\"form-input position-relative\">\r\n                    <input v-model=\"passwordb\" :type=\"type\" class=\"form-control\" name=\"login[passwordb]\"\r\n                      placeholder=\"*********\">\r\n                    <div class=\"show-hide\"><span class=\"show\" @click=\"showPassword\"> </span></div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"form-group\">\r\n                  <label class=\"col-form-label\">Confirmar Password</label>\r\n                  <div class=\"form-input position-relative\">\r\n                    <input v-model=\"passwordConfirmarb\" :type=\"type\" class=\"form-control\" name=\"login[passwordb]\"\r\n                      placeholder=\"*********\">\r\n                    <div class=\"show-hide\"><span class=\"show\" @click=\"showPassword\"> </span></div>\r\n                  </div>\r\n                </div>                 \r\n                <div class=\"form-group\">                   \r\n                  <button class=\"btn btn-primary btn-block w-100 mt-3\" type=\"submit\"  @click=\"registrarCuenta\">Registrar cuenta</button>\r\n                </div>                  \r\n                <p class=\"mt-4 mb-0 text-center\">Iniciar sesión en Dogtoralia?<router-link class=\"ms-2\" to=\"/auth/login\">Iniciar sesión </router-link></p>\r\n              </form>\r\n              <p v-if=\"errorMessage\" class=\"text-danger text-center mt-2\">{{ errorMessage }}</p>\r\n         \r\n              <div v-if=\"okMessage\" class=\"alert alert-success\" role=\"alert\">\r\n                <h4 class=\"alert-heading\">Éxito!</h4>      \r\n                <p style=\"font-size: 16px;\">Cuenta registrada correctamente</p>           \r\n              </div>\r\n\r\n            </div>\r\n            \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n   \r\n  </div>\r\n</template>\r\n\r\n<script>   \r\n\r\nexport default {\r\ndata() {\r\n  return {\r\n    type: 'password',\r\n    nombreb: '',      \r\n    apellidob: '',\r\n    telefonob: '',\r\n    correob: '',\r\n    passwordb: '',\r\n    passwordConfirmarb: '',\r\n    errorMessage: '',\r\n    okMessage: '',\r\n  };\r\n},\r\nmethods: {\r\n  showPassword(){\r\n    this.type = this.type === 'password' ? 'text' : 'password';\r\n  },\r\n  async registrarCuenta() {\r\n    try {\r\n      \r\n          var myHeaders = new Headers();\r\n          myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n          console.log('nombre::' , this.nombre);\r\n          var raw = JSON.stringify({\r\n            \"name\": this.nombre,\r\n            \"last_name\": this.apellido,\r\n            \"email\": this.correo,\r\n            \"password\": this.password,\r\n            \"password_confirmation\": this.passwordConfirmar,\r\n            \"phone_number\": this.telefono.toString()\r\n          });\r\n\r\n          var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n          };\r\n\r\n          fetch(\"https://devs-devitm.com/api/pet_owner/register\", requestOptions)\r\n          .then(response => response.text())\r\n          .then(result => {              \r\n            this.errorMessage = '';   \r\n            let resultado = JSON.parse(result);   \r\n            console.log(\"resultado:\",resultado);\r\n            if(resultado.status ==='error')  {\r\n                 this.errorMessage = resultado.message;           \r\n              }  else {                  \r\n                this.okMessage = \"Usuario creado correctamente.Por favor, inicie sesión\";  \r\n                this.nombre= '';\r\n                this.apellido= '';\r\n                this.telefono= '';\r\n                this.correo =  '';\r\n                this.password = '';\r\n                this.passwordConfirmar =  '';                        \r\n              }\r\n          } )\r\n          .catch(error => console.log('error', error));\r\n\r\n\r\n    } catch (error) {\r\n    \r\n    }\r\n  },\r\n},\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}